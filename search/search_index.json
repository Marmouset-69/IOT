{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"My Home Assistant tricks!","text":"<p>Keywords: Home Assitant, Lovelace, Tasmota, Shelly, Qubino, ESP8268, ESP01, PZEM 004T, DHT22, PIR, MQTT, Intel NUC Try</p> <p> Image by upklyak on Freepik </p>"},{"location":"CNC/","title":"How to mill a PCB","text":""},{"location":"CNC/#example","title":"Example","text":"<p>Export the Gerber files</p>"},{"location":"CNC/#use-pcb2gcode","title":"Use pcb2gcode","text":"<p>Create a file named millproject</p> <p><pre><code># This is an example config file for pcb2gcode.\n# Rename this file \"millproject\" and place it in the same directory as your\n# gerber files to save typing\n# &lt;option&gt;=false is implicit, it is present just for clearness\n\n# You may want to uncomment and change those in local project files (or you\n# can specify them directly as command line arguments)\n#front=led_copperTop.gtl\nback=led_copperTop.gtl\noutline=led_contour.gm1\ndrill=led_drill.txt\n#preamble=preamble.ngc\n#preamble-text=preamble_text.txt\n#postamble=postamble.ngc\n\n# Common options\nmetric=true\nmetricoutput=true\n#mirror-absolute=false\n#optimise=true\nzchange=2.0000\n#zero-start=true\nzsafe=2.0000\n\n# Mill options\n#extra-passes=0\nmill-feed=60\nmill-speed=20000\noffset=0.400\n#offset=20  # Uncomment (and comment the previous line) for voronoi regions\nzwork=-0.700\n\n# Drill options\ndrill-feed=200\n#drill-side=auto\ndrill-speed=20000\n#milldrill=false\nnog81=true\n#onedrill=false\nzdrill=-2.0\n\n# Outline options\n#bridges=0.5000\n#bridgesnum=2\ncut-feed=60\n#cut-side=auto\ncut-infeed=20.0000\ncut-speed=20000\ncutter-diameter=1.5000\n#fill-outline=true\n#zbridges=-0.6000\nzcut=-2.000\n\n# Autoleveller options\n#al-back=false\n#al-front=false\n#al-probefeed=100\n#al-x=15.0000\n#al-y=15.0000\n#software=LinuxCNC\n</code></pre> Run pcb2gcode in the same folder (https://github.com/pcb2gcode/pcb2gcode) <pre><code>pcb2gcode\n</code></pre></p>"},{"location":"CNC/#clean-up-g-code-files","title":"Clean Up G-code Files","text":"<p>As write in https://www.baldengineer.com/kicad-to-x-carve-pcb-workflow.html clean up gcode files (see section 5)</p>"},{"location":"CNC/#milling","title":"Milling","text":"<p>back.ngc file:</p> <ul> <li>remove G64 line</li> <li>remove M0 lines</li> <li>Remove M2 line at the end of the file</li> </ul>"},{"location":"CNC/#drill","title":"Drill","text":"<p>drill.ngc file:</p> <ul> <li>Remove M6 lines</li> <li>Remove M0 line</li> <li>Remove M2 line at the end of the file</li> </ul>"},{"location":"CNC/#outline","title":"Outline","text":"<p>outline file:</p> <ul> <li>remove G64 line</li> <li>remove M0 lines</li> <li>Remove M2 line at the end of the file</li> </ul>"},{"location":"CNC/#here-is-a-python-script-to-remove-all-files","title":"Here is a Python script to remove all files","text":"<pre><code># ChatGTP code ;-)\n# 17/12/2023\n\nimport sys\nimport shutil\n\ndef remove_unwanted_lines(file_path):\n  # Dictionary of codes to be removed\n  removed_lines = {\"M0\", \"M6\", \"G64\", \"M2\"}\n\n  # Read lines from the input file\n  with open(file_path, 'r') as file:\n    lines = file.readlines()\n\n    # Filter out unwanted lines\n    filtered_lines = [line for line in lines if not any(line.strip().startswith(code) for code in removed_lines)]\n\n    # Write filtered lines back to the same file\n    with open(file_path, 'w') as file:\n      file.writelines(filtered_lines)\n\n    # Print the number of lines removed for each code\n    for code in removed_lines:\n      count = sum(1 for line in lines if line.strip().startswith(code))\n      print(f\"{count} lines starting with {code} have been removed.\")\n\nif __name__ == \"__main__\":\n  # Check if the correct number of command-line arguments is provided\n  if len(sys.argv) != 2:\n    print(\"Usage: python script.py input_file.gcode\")\n    sys.exit(1)\n\n    # Get input file path from command-line arguments\n    input_file_path = sys.argv[1]\n\n    # Create a backup of the input file\n    backup_file_path = input_file_path + \".bak\"\n    shutil.copyfile(input_file_path, backup_file_path)\n\n    # Call the function to remove unwanted lines\n    remove_unwanted_lines(input_file_path)\n</code></pre>"},{"location":"CNC/#zero","title":"Zero!","text":"<p>At each step, set the Z origine (with probe)</p> <p></p>"},{"location":"CNC/#on-mac-osx","title":"On Mac OSX :","text":"<ul> <li>Use CAMotics app. to preview gcode files</li> <li>Use Universal GCode Sender to mill the PCB</li> </ul>"},{"location":"CNC/#mill","title":"Mill","text":"<pre><code>La gravure se d\u00e9roule en 3 \u00e9tapes :\n- Gravure avec la pointe javelot 1 dent 30\u00b0 EVOMAX.\n  Vitesse de rotation : 20.000 tr/min ou plus.\n  Avance : 300 mm/min\n- Per\u00e7age avec un for\u00eat de 0.8mm et / ou 1mm\n- D\u00e9tourage du circuit avec la fraise \"coupe diamant\" :\n  Vitesse de rotation : 20.000 tr/min ou plus\n  Avance : 250 mm/min (avance plus importante possible sur machine rigide)\n  Fraisage : en avalant\n</code></pre>"},{"location":"CNC/#results","title":"Results","text":""},{"location":"CNC/#memo","title":"Memo!","text":""},{"location":"CNC/#mill_1","title":"Mill","text":"<p>Genmitsu 10Pcs Nano Blue Coat Engraving Bits, 20 Degree 0.1mm Tip 1/8\" Shank Conical V-Bit</p> <p></p> <pre><code>Pack pour la gravure de circuits imprim\u00e9s par CNC\nGravez vos circuits imprim\u00e9s avec votre fraiseuse num\u00e9rique.\nGravure \u00e0 l'anglaise.\nCe pack contient tous les outils n\u00e9cessaires pour r\u00e9ussir la gravure de vos PCB !\nDiam\u00e8tre de queue des outils du pack : 3.175 mm.\nLe pack contient :\n- 1 pointe javelot 1 dent \u00e0 30\u00b0 0.1mm s\u00e9rie EVOMAX, outil id\u00e9al pour la gravure des circuits imprim\u00e9s !\n- 2 for\u00eats de 0.8 mm.\n- 1 for\u00eat de 1.00 mm.\n- 1 fraise \"coupe diamant\" carbure 1.50 mm.\n\nLa gravure se d\u00e9roule en 3 \u00e9tapes :\n- Gravure avec la pointe javelot 1 dent 30\u00b0 EVOMAX.\nVitesse de rotation : 20.000 tr/min ou plus.\nAvance : 300 mm/min\n- Per\u00e7age avec un for\u00eat de 0.8mm et / ou 1mm\n- D\u00e9tourage du circuit avec la fraise \"coupe diamant\" :\nVitesse de rotation : 20.000 tr/min ou plus\nAvance : 250 mm/min (avance plus importante possible sur machine rigide)\nFraisage : en avalant\n</code></pre> <p> </p> <p>Epaisseur PCB : \u00c9paisseur: env. 1,5 mm. Coppe 0.035mm</p>"},{"location":"Control-screen/Firefox_rolling/","title":"How to Display Multiple Web Pages in Full Screen on a Wall-Mounted Screen?","text":"<p>Imagine you have a wall-mounted screen that needs to display multiple web pages in full screen, with an automatic change every 30 seconds. This can be useful in various contexts: monitoring dashboards, displaying webcam feeds, or showing dynamic information pages. Here is a step-by-step guide to achieve this with a simple and adaptable solution.</p>"},{"location":"Control-screen/Firefox_rolling/#create-a-dedicated-web-page-with-iframes-and-javascript","title":"Create a Dedicated Web Page with iframes and JavaScript","text":"<p>To manage the rotating display of web pages, we will create a specific HTML page. This page will contain iframes to display different URLs and JavaScript to automate the page changes every 30 seconds.</p>"},{"location":"Control-screen/Firefox_rolling/#step-1-create-an-html-file","title":"Step 1: Create an HTML File","text":"<p>Create a file named <code>display.html</code> and open it in your favorite text editor. Copy the following code into it:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Rotating Display&lt;/title&gt;\n    &lt;style&gt;\n        body, html {\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            height: 100%;\n            width: 100%;\n        }\n        iframe {\n            border: none;\n            width: 100%;\n            height: 100%;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;iframe id=\"displayFrame\" src=\"\"&gt;&lt;/iframe&gt;\n\n    &lt;script&gt;\n        const urls = [\n            \"https://www.example1.com\",\n            \"https://www.example2.com\",\n            \"https://www.example3.com\"\n        ];\n        let currentIndex = 0;\n\n        function changePage() {\n            document.getElementById('displayFrame').src = urls[currentIndex];\n            currentIndex = (currentIndex + 1) % urls.length;\n        }\n\n        setInterval(changePage, 30000); // Change every 30 seconds\n        window.onload = changePage; // Display the first page on load\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Control-screen/Firefox_rolling/#code-explanation","title":"Code Explanation","text":"<ol> <li>Basic Structure: The page uses an iframe to display the web pages.</li> <li>List of URLs: You can replace the example URLs with the ones you want to display.</li> <li>Automation: JavaScript uses <code>setInterval</code> to change the displayed page every 30 seconds.</li> <li>Full Screen: The iframe occupies the entire available space thanks to the CSS styles.</li> </ol> <p>Once the file is created, open it in a browser to test the display.</p>"},{"location":"Control-screen/Firefox_rolling/#the-issue-with-iframes-not-working","title":"The Issue with iframes Not Working","text":"<p>While this solution works in many cases, some web pages may fail to display in an iframe. This is due to security restrictions imposed by websites through HTTP headers like <code>X-Frame-Options</code> or <code>Content-Security-Policy</code>. These restrictions prevent certain pages from being embedded in iframes to protect against potential attacks.</p> <p></p> <p>A common example of this issue is integrating pages from a Home Assistant instance. By default, Home Assistant prevents its pages from being displayed in an iframe for security reasons.</p>"},{"location":"Control-screen/Firefox_rolling/#solution-for-home-assistant","title":"Solution for Home Assistant","text":"<p>If you want to display Home Assistant pages in your iframe, you need to modify Home Assistant's configuration to disable this restriction. Here\u2019s how to do it:</p> <ol> <li>Edit the <code>configuration.yaml</code> File</li> </ol> <p>Add or modify the following section in Home Assistant's <code>configuration.yaml</code> file:</p> <pre><code>http:\n  use_x_frame_options: false\n</code></pre> <ol> <li>Restart Home Assistant</li> </ol> <p>After making the changes, restart Home Assistant to apply them.</p>"},{"location":"Control-screen/Firefox_rolling/#important-note","title":"Important Note","text":"<p>Disabling the <code>X-Frame-Options</code> header may expose your Home Assistant instance to security risks if it is publicly accessible. It is recommended to use this option only in a controlled and secure environment.</p>"},{"location":"Control-screen/Firefox_rolling/#run-firefox-at-boot","title":"Run Firefox at Boot","text":"<p>You need to create a script, for example, <code>start_firefox.sh</code>, containing  <code>firefox -kiosk display.html</code></p> start_firefox.sh<pre><code>firefox -kiosk display.html\n</code></pre> <p>Create the file vi $HOME/.config/autostart/jmh-firefox.desktop (it is possible that 'autostart' doesn't exist) and add:</p> <p>$HOME/.config/autostart/jmh-firefox.desktop <pre><code>[Desktop Entry]\nName=Script-start-firefox\nGenericName=A descriptive name\nComment=Some description about your script\nExec=/home/hasen/Desktop/Papge/start_firefox.sh\nTerminal=false\nType=Application\nX-GNOME-Autostart-enabled=true\n</code></pre></p> <p>Quit kiosk mode</p> <p>Alt+F4 (or Mac : fn + Cmd + F4)</p>"},{"location":"Control-screen/Raspberry-setup/","title":"Control screen","text":""},{"location":"Control-screen/Raspberry-setup/#raspberry-setup","title":"Raspberry setup","text":""},{"location":"Control-screen/Raspberry-setup/#vnc-config","title":"VNC config","text":"<p>Just go to menu /Preference / Raspberr pi Configuration / Interface to activate VNC Use \"VNC viewer\" app. to view the screen</p>"},{"location":"Control-screen/Raspberry-setup/#start-chromium-in-kiosk-mode","title":"Start chromium in kiosk mode","text":"<p>Launch Chromium at boot in full screen (kiosk mode)</p> <p>See Philippe Garry blog </p> <p><pre><code>cd ~/.config/autostart/\nvi ~/.config/autostart/autoChromium.desktop\n</code></pre> Within the file \"autoChromium.desktop\" add the following text to the bottom of the file. <pre><code>[Desktop Entry]\nType=Application\nExec=/usr/bin/chromium-browser --noerrdialogs --disable-session-crashed-bubble --disable-infobars --kiosk http://www.google.com\nHidden=false\nX-GNOME-Autostart-enabled=true\nName[en_US]=AutoChromium\nName=AutoChromium\nComment=Start Chromium when GNOME starts\n</code></pre> <pre><code>reboot\n</code></pre></p> <p>Quit kiosk mode</p> <p>Alt+F4 (or Mac : fn + Cmd + F4)</p> <p>Add to homeassistant configure.yaml file : <pre><code>homeassistant:\n    auth_providers:\n        - type: trusted_networks\n            trusted_networks:\n                - 10.0.4.130\n                - 10.0.4.142\n            trusted_users:\n                10.0.4.130: 4c40eb4c2c7e4a22b1857658af4735b8\n                10.0.4.142: 4c40eb4c2c7e4a22b1857658af4735b8\n           allow_bypass_login: true\n        - type: homeassistant\n</code></pre></p>"},{"location":"Control-screen/Raspberry-setup/#how-to-mount-raspberry-on-mac-os","title":"How to mount Raspberry on Mac OS","text":"<p>See Pi My Life Up</p> <p><pre><code>sudo apt update\nsudo apt upgrade\nsudo apt install netatalk\nsudo vi /etc/netatalk/afp.conf\n</code></pre> copy below <pre><code>[Homes]\n    basedir regex = /home\n</code></pre> Restart <pre><code>sudo systemctl restart netatalk\n</code></pre></p> <p>Write this IP down as we will need it for connecting to the shared drive.</p> <pre><code>sudo hostname -I\n</code></pre>"},{"location":"Control-screen/Raspberry-setup/#setup-pir-sensor","title":"Setup PIR sensor","text":""},{"location":"Control-screen/Raspberry-setup/#wire","title":"Wire","text":""},{"location":"Control-screen/Raspberry-setup/#time-delay-adjustment","title":"Time Delay Adjustment","text":""},{"location":"Control-screen/Raspberry-setup/#files","title":"Files","text":"<p>Create file : /home/pi/Desktop/Cuisine/pir.py</p> <pre><code>import sys\nimport time\nimport RPi.GPIO as io\nimport subprocess\n\nio.setmode(io.BOARD)\nSHUTOFF_DELAY = 120 # seconds\nPIR_PIN=11\n\n# Attention, apres une detection, le PIR renvoyer 1 pendant une 15aine de seconde\n\ndef main():\n    print (\"Detection started.\")\n    print (\"Wait\", SHUTOFF_DELAY, \"sec before all is OK\")\n    io.setup(PIR_PIN, io.IN)\n    turned_off = False\n    last_motion_time = time.time()\n    while True:\n        if io.input(PIR_PIN):\n            last_motion_time = time.time()\n            sys.stdout.flush()\n            if turned_off:\n                turned_off = False\n                turn_on()\n                print (\"ON\")\n        else:\n            if not turned_off and time.time() &gt; (last_motion_time + SHUTOFF_DELAY):\n                turned_off = True\n                turn_off()\n                print (\"OFF\")\n            if not turned_off and time.time() &gt; (last_motion_time + 1):\n                time.sleep(.1)\n\ndef turn_on():\n    subprocess.call(\"sh /home/pi/Desktop/Cuisine/monitor_on.sh\", shell=True)\n\ndef turn_off():\n    subprocess.call(\"sh /home/pi/Desktop/Cuisine/monitor_off.sh\", shell=True)\n\nif __name__ == '__main__':\n    try:\n        main()\n    except KeyboardInterrupt:\n        io.cleanup()\n</code></pre> <p>Create file : /home/pi/Desktop/Cuisine/monitor_on.sh <pre><code>vcgencmd display_power 1 &gt; /dev/null\n</code></pre> Create file : /home/pi/Desktop/Cuisine/monitor_off.sh <pre><code>vcgencmd display_power O &gt; /dev/null\n</code></pre></p> <p>Warning</p> <p>If \"vcgencmd\" and \"tvservice\" doesn't work on your Raspberry pi 4 like this: <pre><code>pi@raspberrypi:~ $ vcgencmd display_power 0\ndisplay_power=1\n\npi@raspberrypi:~ $ tvservice -l\ntvservice is not supported when using the vc4-kms-v3d driver.\nSimilar features are available with standard linux tools\nsuch as modetest from libdrm-tests.\n</code></pre> then you can modify the \"/boot/config.txt\" file by replacing vc4-kms-v3d with vc4-fkms-v3d like this <pre><code># Enable DRM VC4 V3D driver\ndtoverlay=vc4-fkms-v3d\nmax_framebuffers=2\n</code></pre> Thank's a lot to Fuzz The Pi Guy</p> <p>Edit the file /etc/rc.local using the editor of your choice. You must edit it with root permissions:</p> <p><pre><code>sudo vi /etc/rc.local\n</code></pre> Add</p> <pre><code>sudo python /home/pi/sample.py &amp;\n</code></pre>"},{"location":"Control-screen/Raspberry-setup/#remove-scren-saver","title":"Remove scren saver","text":"<p>In order to prevent sleep mode in Desktop mode, we will simply add a screensaver since it is not present by default, and we will be able to configure it precisely to prevent sleep mode.</p> <ul> <li>Open the terminal and type the command : <code>sudo apt-get install xscreensaver</code></li> <li>Reboot the Rasp.</li> <li>go to the applications / Menu / Preferences / Screensaver.</li> <li>In the window that opens, all that's left is to choose to disable the screensaver from the drop-down list at the top left.</li> </ul>"},{"location":"Control-screen/nuc/","title":"Installation of a NUC as a home assistant server with a control screen","text":"<p>Intel NUC NUC10i5FNKN UCFF Noir i5-10210U 1,6 GHz</p> <p>Install a Debian OS</p>"},{"location":"Control-screen/nuc/#add-a-special-user","title":"Add a special user","text":"<p>Create a new user that will be used only for viewing the control screen.</p>"},{"location":"Control-screen/nuc/#how-to-mount-disk-on-a-mac","title":"How to mount disk on a Mac","text":"<p>Install Netatalk</p> <p><pre><code>sudo apt-get install netatalk\nvi /etc/netatalk/afp.conf\n</code></pre> /etc/netatalk/afp.conf<pre><code>[Homes]\n    basedir regex = /home\n</code></pre> <pre><code>/etc/init.d/netatalk restart\n</code></pre></p>"},{"location":"Control-screen/nuc/#auto-login","title":"Auto login","text":"<p>Go to the user preferences of Gnome window manager and check \"automatic connection\"</p> <p></p>"},{"location":"Control-screen/nuc/#vnc","title":"VNC","text":"<p>To share the screen, go to preferences panel and Share sub-panal and set the passwd. (right clic on default connection)</p> <p></p> <p>You can't connect directly to the server as it is waiting for a password you have just entered The keyring containing this password is normally unlocked when logging into the account in desktop mode. When you are in auto login mode, the keyring is not unlocked. So you can't connect derectly to the VNC server because it wan't the password.</p> <p>The only solution I found is to remove the keyring password. It's really rotten, a big security hole. To do that, go to the keyring and clic right on the default connection. Change the password with an empty string. See the video from Techno Focus</p> <p></p>"},{"location":"Control-screen/nuc/#remove-screen-saver","title":"Remove screen saver","text":"<p><pre><code>sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target\n</code></pre> Output<pre><code>Created symlink /etc/systemd/system/sleep.target \u2192 /dev/null.\nCreated symlink /etc/systemd/system/suspend.target \u2192 /dev/null.\nCreated symlink /etc/systemd/system/hibernate.target \u2192 /dev/null.\nCreated symlink /etc/systemd/system/hybrid-sleep.target \u2192 /dev/null.\n</code></pre></p>"},{"location":"Control-screen/nuc/#create-your-web-pages","title":"Create your web pages","text":"<p>In my case, I put all my HTML files in <code>~/Bureau/</code> in particular <code>\u00ecndex.html</code></p>"},{"location":"Control-screen/nuc/#start-firefox-in-kiosk-mode-at-boot","title":"Start Firefox in kiosk mode at boot","text":""},{"location":"Control-screen/nuc/#create-shell-script","title":"Create Shell script","text":"<p>In the directory <code>~/Bureau/</code> add the file <code>start_firefox.sh</code> with code:</p> <p>~/Bureau/start_firefox.sh<pre><code>urls=(\\\n\"/home/hasen/Desktop/Papge/Web/index.html\" \\\n\"/home/hasen/Desktop/Papge/Web/index_webcam.html\" \\\n\"https://embed.waze.com/fr/iframe?zoom=14&amp;lat=45.253203623014485&amp;lon=5.878454741111851\"\n\"http://homeassistant.local:8123/ecran-temperatures/0?kiosk\" \\\n\"http://homeassistant.local:8123/consommation-maison/0?kiosk\")\n\n# Ouvre Firefox en arri\u00e8re-plan\n\nsleep 5\nxdotool type \"terminal\"\nsleep 5\nxdotool key Return\nsleep 5\nxdotool type \"firefox -kiosk\"\nxdotool key Return\nsleep 15\n\nwhile true\ndo\n  for url in \"${urls[@]}\"\n  do\n    # Utilise xdotool pour simuler Ctrl+L (focus sur la barre d'adresse)\n    xdotool key ctrl+l\n    sleep 0.5\n    xdotool type \"$url\"\n    xdotool key Return\n\n    sleep 5\n  done\ndone\n\n\n# Old code\n#!/bin/bash\n# You have to put this little break, otherwise the first page of Firefox on all black. Maybe a bug?\n#sleep 3\n# I have install full version of firefox\n#/opt/firefox/./firefox --kiosk index.html\n</code></pre> than</p> <pre><code>chmod a+x start_firefox.sh\n</code></pre>"},{"location":"Control-screen/nuc/#run-the-shell-script-at-boot","title":"Run the shell script at boot","text":"<p>Create the file <code>vi $HOME/.config/autostart/jmh-firefox.desktop</code> (it is possible that 'autostart' doesn't exist) and add:</p> $HOME/.config/autostart/jmh-firefox.desktop<pre><code>[Desktop Entry]\nName=Script-jmh-start-firefox\nGenericName=A descriptive name\nComment=Some description about your script\nExec=/home/hasen/Desktop/Papge/start_firefox.sh\nTerminal=false\nType=Application\nX-GNOME-Autostart-enabled=true\n</code></pre> <p>Quit kiosk mode</p> <p>You can press ALT+F4 Alt+F4 (or Mac : fn + Cmd + F4) to quit kiosk Mode.</p>"},{"location":"Control-screen/nuc/#pir-detection","title":"PIR detection","text":"<p>Arduino mini + PIR sensor HC-SR501</p> <p> </p>"},{"location":"Control-screen/nuc/#wire","title":"Wire","text":""},{"location":"Control-screen/nuc/#time-delay-adjustment","title":"Time Delay Adjustment","text":"<p>Delay is (from left to right) 10s, 1000s (1'30'') and 2100s (3'30'')</p>"},{"location":"Control-screen/nuc/#find-usb-port","title":"Find USB port","text":"<p>Find USB port - method #1<pre><code>sudo python3 -m serial.tools.list_port\n</code></pre> or Find USB port - method #2<pre><code>ls -l /dev/*USB*\n</code></pre> output<pre><code>crw-rw---- 1 root dialout 188, 0 18 f\u00e9vr. 11:22 /dev/ttyUSB0\n</code></pre></p> <p>or Find USB port - method #3<pre><code>sudo lsusb\n</code></pre> output<pre><code>Bus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 003: ID 1a86:7523 QinHeng Electronics CH340 serial converter\nBus 001 Device 002: ID 8087:0026 Intel Corp.\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n</code></pre></p>"},{"location":"Control-screen/nuc/#arduino-mini-code","title":"Arduino mini code","text":""},{"location":"Control-screen/nuc/#setup-arduino-ide","title":"Setup Arduino IDE","text":"PIR motion sensor<pre><code>#define sensor 2\n\nvoid setup()\n{\n  Serial.begin(9600);\n  pinMode(sensor, INPUT);\n  digitalWrite(sensor,LOW);\n}\n\nvoid loop()\n{\n  if(digitalRead(sensor)) {\n    Serial.println(\"MovementDetected\");\n    delay(500); // Wait 1/2 second to limit the traffic on the USB port\n  } else {\n    int t = millis();\n    Serial.println(\"NoMovement\");\n    delay(1000); // Wait 1 second to limit the traffic on the USB port\n  }\n}\n</code></pre>"},{"location":"Control-screen/nuc/#listen-to-usb-port","title":"Listen to USB port","text":"<p>Listen to port USB0<pre><code>sudo cat /dev/ttyUSB0\n</code></pre> output<pre><code>MovementDetected\nMovementDetected\nMovementDetected\nMovementDetected\nMovementDetected\n</code></pre></p>"},{"location":"Control-screen/nuc/#motion-detection-to-switch-onoff-the-display","title":"Motion Detection to switch ON/OFF the display","text":""},{"location":"Control-screen/nuc/#python3-installation","title":"Python3 Installation","text":"<p>Warning</p> <p>We install Python3 not Python</p> Install Python3-Serial package<pre><code>sudo apt-get install python3-serial\n</code></pre>"},{"location":"Control-screen/nuc/#python-serial-package-install","title":"Python Serial package install","text":"<pre><code>sudo apt-get install python3-serial\n</code></pre>"},{"location":"Control-screen/nuc/#create-the-motion-detection-python-script","title":"Create the Motion Detection Python script","text":"PIR_sensor.py<pre><code>import serial, sys\nimport time\nimport os\n\nport = \"/dev/ttyUSB0\"\nbaudrate = 9600\nser = serial.Serial(port,baudrate,timeout=0.001)\nstatus=\"off\"\nlineString=\"\"\nwhile True:\n    time.sleep(0.1)\n    if(ser.in_waiting &gt; 0): # something arrived on USB port\n        lineString = ser.readline()\n        lineString = lineString.decode('Ascii') # Convert into a readable string\n        print(lineString)\n    if('MovementDetected' in lineString):\n        if(status == \"on\"):\n            print(\"Deja  ON\")\n        else:\n            print(\"Mis a ON\")\n            status = \"on\"\n            os.system('sleep 1 &amp;&amp; xset dpms force on')\n    elif('NoMovement' in lineString):\n        if(status == \"off\"):\n            print(\"Deja  OFF\")\n        else:\n            print(\"Mis a OFF\")\n            status = \"off\"\n            os.system('sleep 1 &amp;&amp; xset dpms force off')\n    else:\n        print(\"-Error : unknow USB data -&gt;\" + lineString)\n</code></pre>"},{"location":"Control-screen/nuc/#run-the-python-script-at-boot","title":"Run the Python Script at Boot","text":"<p>Create the file <code>vi ~/.config/autostart/jmh-pir.desktop</code> in the homedir (it is possible that 'autostart' doesn't exist) and add:</p> $HOME/.config/autostart/jmh-pir.desktop<pre><code>[Desktop Entry]\nName=Motion Detection\nGenericName=If motion is detected, switch ON the display, else switch OFF\nComment=If motion is detected, switch ON the display, else switch OFF\nExec=python3 /home/hasen/Bureau//home/hasen/Bureau/pir.py\nTerminal=false\nType=Application\nX-GNOME-Autostart-enabled=true\n</code></pre> <p>Warning</p> <p>/dev/ttyUSB0 is only accessible by root. If the default user is not root, use the commande <code>sudo usermod -a -G dialout $USER</code> to add $USER in the dialout group and logout/login.</p>"},{"location":"Control-screen/nuc/#disabled-authentification-on-home-assistant","title":"Disabled authentification on home assistant","text":"<p>Info</p> <p>In my case, all my HTML files are local, so this section is not useful.</p> <p>By default, when you want to display a homeassistant page, you have to authenticate yourself. So, add in <code>configure.yaml</code>:</p> configure.yaml<pre><code>homeassistant:\nauth_providers:\n- type: trusted_networks\ntrusted_networks:\n- 10.0.4.130\ntrusted_users:\n10.0.4.130: 4c40eb4c2c7e4a22b1857658af4735b8 # User id\nallow_bypass_login: true\n- type: homeassistant\n</code></pre>"},{"location":"Control-screen/nuc/#remove-computer-will-suspend-very-soon-because-of-inactivity-message","title":"Remove \" Computer will suspend very soon because of inactivity\" message","text":"<p>see STUDIOS 75 <pre><code>vi /etc/gdm3/greeter.dconf-defaults\n</code></pre> Go to the section: <pre><code># Automatic suspend\n# =================\n</code></pre></p> <p>Uncomment the following line if you are on mains (remove the # in front): <pre><code>sleep-inactive-ac-type et indiquer la valeur \"nothing\" ou \"blank\".\n</code></pre> Uncomment the following lines if you are on Battery: <pre><code>sleep-inactive-battery-timeout=0//    (The default setting is 1200)\nsleep-inactive-battery-type='blank'\n</code></pre> Save the file and restart the gdm service (or restart your system).</p>"},{"location":"Gravitrax/","title":"Wifi - web server","text":""},{"location":"Gravitrax/#d1-mini-v400","title":"D1 mini V4.0.0","text":"<p>Official doc : https://www.wemos.cc/en/latest/d1/d1_mini.html</p> <p> </p>"},{"location":"Gravitrax/#ide-arduino-config","title":"IDE Arduino config.","text":""},{"location":"Gravitrax/#piezo-sensor-bip","title":"Piezo sensor - bip!","text":"<pre><code>#define pinPiezo 0\n\nvoid setup() {\n  // initialise les broches\n  pinMode(pinPiezo, OUTPUT);\n}\n\nvoid bip(int note, int note_delay){\n  tone (pinPiezo, note);\n  delay(note_delay);\n  noTone(pinPiezo);\n}\nvoid loop() {\n  bip(600,100);\n  bip(900,100);\n  delay(4000);\n}\n</code></pre>"},{"location":"Gravitrax/#led","title":"Led","text":"<p>See https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink</p> <p></p> <pre><code>// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(2, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);  // turn the LED on (HIGH is the voltage level)\n  delay(1000);                      // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);   // turn the LED off by making the voltage LOW\n  delay(1000);                      // wait for a second\n}\n</code></pre>"},{"location":"Gravitrax/#servo","title":"Servo","text":"<p>See https://docs.arduino.cc/learn/electronics/servo-motors</p> <p></p> <pre><code>#include &lt;Servo.h&gt;\n\nServo myservo;  // create servo object to control a servo\n// twelve servo objects can be created on most boards\n\n\nvoid setup() {\n  myservo.attach(15,500,2500);  // change\n}\n\nvoid SetPos(int pos){\n  myservo.write(pos);\n}\nvoid loop() {\n  SetPos(0);\n  delay(2000);\n  SetPos(45);\n  delay(2000);\n  SetPos(90);\n  delay(2000);\n  SetPos(180);\n  delay(2000);\n}\n</code></pre>"},{"location":"Gravitrax/#ir-distance-sensor","title":"IR distance sensor","text":"<pre><code>const int digital_pin = 12;\nconst int analog_pin = A0;\n\nvoid setup(){\n  Serial.begin(9600);\n  pinMode(digital_pin,INPUT);\n}\n\nvoid loop(){\n  Serial.print(\"Analog Reading=\");\n  Serial.print(analogRead(analog_pin));\n  Serial.print(\"\\t Digital Reading=\");\n  Serial.println(digitalRead(digital_pin));\n  delay(10);\n}\n</code></pre> <p>Warning</p> <p>The digital pin (12) never goes to 1, no idea why!</p>"},{"location":"Gravitrax/#use-rest-api","title":"Use REST API","text":"<p>Install https://www.arduino.cc/reference/en/libraries/arest/ To use ESP8266 (here D1 mini), add a specific module (see below the excerpt from the documentation)</p> <p>Info</p> <p>For ESP8266 (here D1 mini) add a new module:</p> <p>For WiFi using the ESP8266 chip</p> <p>To use the library with the ESP8266 WiFi chip you will need to install the required module from the Boards Manager of the Arduino IDE. These are the steps to install the ESP8266 package inside the Arduino IDE:</p> <p>Start the Arduino IDE and open the Preferences window Enter http://arduino.esp8266.com/stable/package_esp8266com_index.json into the Additional Board Manager URLs field. You can add multiple URLs, separating them with commas. Open the Boards Manager from Tools &gt; Board menu and install the esp8266 package (and after that don't forget to select your ESP8266 board from Tools &gt; Board menu).</p>"},{"location":"Gravitrax/#esp8266-d1-mini","title":"ESP8266 D1 mini","text":"<p>Warning</p> <p>Be sure you use the front side</p> <p></p> <p> </p> <p> </p>"},{"location":"Gravitrax/#wire","title":"Wire","text":"<pre><code>#define PIN_LED 5\n#define PIN_DIGITAL_IR  12\n#define PIN_ANALOG_IR A0\n#define PIN_PIEZO 14\n#define PIN_SERVO 16\n</code></pre>"},{"location":"Gravitrax/#nano-nrf24","title":"Nano NRF24","text":"<p>Don't Work because there only one bidirectionnal node (nomber 0).</p>"},{"location":"Gravitrax/#source","title":"Source","text":"<p>https://passionelectronique.fr/tutorial-nrf24l01/</p>"},{"location":"Gravitrax/#wire_1","title":"Wire","text":"<p>\"Concernant les broches CE et CSN, il y a bien d\u2019autres endroit o\u00f9 vous pourriez les brancher. Je pense notamment aux broches D9 et D10, par exemple. Mais avant de faire quel que changement que ce soit, r\u00e9fl\u00e9chissez bien \u00e0 l\u2019usage que vous ferez des autres pins. Par exemple, si vous utilisez un servomoteur pilot\u00e9 via ondes radios avec un nRF24L01+, sachez que la librairie \u00ab servo.h \u00bb qui permet de les piloter ne permet pas de les brancher sur n\u2019importe quelles broches. Et justement, ceux-ci ne peuvent \u00eatre \u00ab attach\u00e9s \u00bb qu\u2019aux bornes 9 et 10 d\u2019un arduino uno, ou arduino nano. Comme quoi, il faut toujours lister tous ses besoins, avant d\u2019attribuer telle ou telle pin d\u2019entr\u00e9e ou sortie \u00e0 tel ou tel p\u00e9riph\u00e9rique !\"</p>"},{"location":"Gravitrax/#reciever","title":"Reciever","text":"<pre><code>/*\n  01/11/2023\n  Code inspired by :\n  Fichier:      HelloWorldNRF24L01-Recepteur\n  Description:  R\u00e9ception d'un message \"Hello World\" depuis un autre arduino nano, via un NRF24L01\n  Auteur:       Passion-\u00c9lectronique\n  Librairie utilis\u00e9e : https://github.com/nRF24/RF24\n*/\n\n#include &lt;SPI.h&gt;\n#include &lt;RF24.h&gt;\n\n#define pinCSN  7             // On associe la broche \"CSN\" du NRF24L01 \u00e0 la sortie digitale D7 de l'arduino\n#define pinCE   8             // On associe la broche \"CE\" du NRF24L01 \u00e0 la sortie digitale D8 de l'arduino\n#define tunnel  \"PIPE1\"       // On d\u00e9finit le \"nom de tunnel\" (5 caract\u00e8res) \u00e0 travers lequel on va recevoir les donn\u00e9es de l'\u00e9metteur\n\nRF24 radio(pinCE, pinCSN);    // Instanciation du NRF24L01\n\n    const byte adresse[6] = tunnel;       // Mise au format \"byte array\" du nom du tunnel\nchar message[32];                     // Avec cette librairie, on est \"limit\u00e9\" \u00e0 32 caract\u00e8res par message\n\n    #define LED_YELLOW_PIN 5\n#define LED_GREEN_PIN 6\n\nvoid setup() {\n  Serial.begin(9600);\n  Serial.println(\"R\u00e9cepteur NRF24L01\");\n  Serial.println(\"\");\n\n  pinMode(LED_GREEN_PIN, OUTPUT);\n  pinMode(LED_YELLOW_PIN, OUTPUT);\n\n  for (int i=0; i &lt; 4; i++) {\n    digitalWrite(LED_GREEN_PIN, HIGH);\n    delay(100);\n    digitalWrite(LED_GREEN_PIN, LOW);\n\n    digitalWrite(LED_YELLOW_PIN, HIGH);\n    delay(100);\n    digitalWrite(LED_YELLOW_PIN, LOW);\n    Serial.println(i);\n  }\n    digitalWrite(LED_GREEN_PIN, HIGH);\n\n  // Partie NRF24\n    radio.begin();                      // Initialisation du module NRF24\n  radio.openReadingPipe(0, adresse);  // Ouverture du tunnel en LECTURE, avec le \"nom\" qu'on lui a donn\u00e9\n    radio.setPALevel(RF24_PA_MIN);      // S\u00e9lection d'un niveau \"MINIMAL\" pour communiquer (pas besoin d'une forte puissance, pour nos essais)\n  radio.startListening();             // D\u00e9marrage de l'\u00e9coute du NRF24 (signifiant qu'on va recevoir, et non \u00e9mettre quoi que ce soit, ici)\n    }\n\n    void loop() {\n  // On v\u00e9rifie \u00e0 chaque boucle si un message est arriv\u00e9\n      if (radio.available()) {\n  radio.read(&amp;message, sizeof(message));                        // Si un message vient d'arriver, on le charge dans la variable \"message\"\n        Serial.print(\"&lt;&lt; Recied: \");\n  Serial.println(message);     // \u2026 et on l'affiche sur le port s\u00e9rie !\n\n        // Led blink\n        digitalWrite(LED_YELLOW_PIN, HIGH);\n  delay(2);\n  digitalWrite(LED_YELLOW_PIN, LOW);\n  }\n}\n</code></pre>"},{"location":"Gravitrax/#transmitter","title":"Transmitter","text":"<pre><code>/*\n  01/11/2023\n  Code inspired by :\n  Fichier:      HelloWorldNRF24L01-Emetteur\n  Description:  Emission d'un \"Hello World\" via un NRF24L01\n  Auteur:       Passion-\u00c9lectronique\n  Librairie utilis\u00e9e : https://github.com/nRF24/RF24\n*/\n\n#include &lt;SPI.h&gt;\n#include &lt;RF24.h&gt;\n\n#define pinCSN  7             // On associe la broche \"CSN\" du NRF24L01 \u00e0 la sortie digitale D7 de l'arduino\n#define pinCE   8           // On associe la broche \"CE\" du NRF24L01 \u00e0 la sortie digitale D8 de l'arduino\n#define tunnel  \"PIPE1\"       // On d\u00e9finit un \"nom de tunnel\" (5 caract\u00e8res), pour pouvoir communiquer d'un NRF24 \u00e0 l'autre\n\nRF24 radio(pinCE, pinCSN);    // Instanciation du NRF24L01\n\nconst byte adresse[6] = tunnel;               // Mise au format \"byte array\" du nom du tunnel\nconst char message[] = \"Hello World !!!\";     // Message \u00e0 transmettre \u00e0 l'autre NRF24 (32 caract\u00e8res maxi, avec cette librairie)\n\n#define LED_GREEN_PIN 5\n#define LED_YELLOW_PIN 6\n\nvoid setup() {\n  Serial.begin(9600);\n\n  Serial.println(\"Emeteur NRF24L01\");\n\n  pinMode(LED_GREEN_PIN, OUTPUT);\n  pinMode(LED_YELLOW_PIN, OUTPUT);\n\n for (int i=0; i &lt; 2; i++) {\n    digitalWrite(LED_GREEN_PIN, HIGH);\n   delay(100);\n   digitalWrite(LED_GREEN_PIN, LOW);\n\n    digitalWrite(LED_YELLOW_PIN, HIGH);\n   delay(100);\n   digitalWrite(LED_YELLOW_PIN, LOW);\n    Serial.println(i);\n  }\n  digitalWrite(LED_GREEN_PIN, HIGH);\n\n  radio.begin();                      // Initialisation du module NRF24\n  radio.openWritingPipe(adresse);     // Ouverture du tunnel en \u00c9CRITURE, avec le \"nom\" qu'on lui a donn\u00e9\n  radio.setPALevel(RF24_PA_MIN);      // S\u00e9lection d'un niveau \"MINIMAL\" pour communiquer (pas besoin d'une forte puissance, pour nos essais)\n  radio.stopListening();              // Arr\u00eat de l'\u00e9coute du NRF24 (signifiant qu'on va \u00e9mettre, et non recevoir, ici)\n  }\n\nvoid loop() {\n  radio.write(&amp;message, sizeof(message));     // Envoi de notre message\n  Serial.print(\"&gt;&gt; Send: \");\n  Serial.println(message);\n  delay(5000);\n\n  // Led blink\n  digitalWrite(LED_YELLOW_PIN, HIGH);\n  delay(1);\n  digitalWrite(LED_YELLOW_PIN, LOW);\n}\n</code></pre>"},{"location":"Gravitrax/#gravitrax-attiniy-85","title":"Gravitrax ATtiniy 85","text":"<p>DON'T WORK!</p>"},{"location":"Gravitrax/#arduino-ide","title":"Arduino IDE","text":"<p>Use Processer: ATmaga328P (Old bootloader)</p>"},{"location":"Gravitrax/#wire_2","title":"Wire","text":"<pre><code>const int LED_VERTE = 0;\n\nvoid setup() {\n  pinMode(LED_VERTE, OUTPUT);\n}\n\nvoid loop() {\n  //feu vert, 5 sec\n  digitalWrite(LED_VERTE, LOW);\n  delay(100);\n  digitalWrite(LED_VERTE, HIGH);\n  delay(100);\n\n}\n</code></pre>"},{"location":"Gravitrax/#upload-programme","title":"Upload programme","text":"<p>https://phmarduino.wordpress.com/2015/12/11/programmer-un-attiny-85/</p> <p></p> <p></p> <p>https://github.com/sui77/rc-switch</p> <p>https://web.archive.org/web/20151007014308/https://code.google.com/p/rc-switch/wiki/HowTo_Send</p> <p>https://mechatrofice.com/arduino/rf-remote-controller-using-arduino-and-ask-module</p>"},{"location":"Gravitrax/Arduino-code/Servo-simple/readme/","title":"Sweep","text":"<p>Sweeps the shaft of a RC servo motor back and forth across 180 degrees.</p>"},{"location":"Gravitrax/Arduino-code/Servo-simple/readme/#hardware-required","title":"Hardware Required","text":"<ul> <li>Arduino Board</li> <li>Servo Motor</li> <li>Hook-up wires</li> </ul>"},{"location":"Gravitrax/Arduino-code/Servo-simple/readme/#circuit","title":"Circuit","text":"<p>Servo motors have three wires: power, ground, and signal. The power wire is typically red, and should be connected to the 5V pin on the Arduino board. The ground wire is typically black or brown and should be connected to a ground pin on the board. The signal pin is typically yellow, orange or white and should be connected to pin 9 on the board.</p> <p></p> <p>(Images developed using Fritzing. For more circuit examples, see the Fritzing project page)</p>"},{"location":"Gravitrax/Arduino-code/Servo-simple/readme/#schematic","title":"Schematic","text":""},{"location":"Gravitrax/Arduino-code/Servo-simple/readme/#see-also","title":"See also","text":"<ul> <li>attach()</li> <li>write()</li> <li>map()</li> <li>Servo library reference</li> <li>Knob - Control the position of a servo with a potentiometer</li> </ul>"},{"location":"Home-Assistant/Communication_and_Protocols/MQTT/MQTT-installation/","title":"MQTT Installation","text":"<p>Info</p> <p>See Tech Tutorials - David McKone video.</p>"},{"location":"Home-Assistant/Communication_and_Protocols/MQTT/MQTT-installation/#install-mosquitto-broker","title":"Install Mosquitto broker","text":"<p>Go to add-ons and find MQTT</p> <p></p> <p>Install and start</p> <p></p> <p>Add a new user</p> <p> </p> <p>MQTT integration is automaticaly proposed</p> <p></p> <p> </p> <p></p> <p>Restart MQTT broker</p> <p></p> <p>If you have a Tasmota blug, configure it (use IP adress and not name like xxx.local)</p> <p> </p> <p></p>"},{"location":"Home-Assistant/Communication_and_Protocols/MQTT/MQTT_NRF24_Sensor/","title":"MQTT with NRF24","text":"<p>In this page, I suppose:</p> <ol> <li>10 sensors send their data (temperature, humidity and brightness) via their NRF24 antennas</li> <li>One NRF24 is plugged into the USB port of a Raspberry and receives the values</li> <li>The values are then sent to Home Asssitant via MQTT.</li> </ol>"},{"location":"Home-Assistant/Communication_and_Protocols/MQTT/MQTT_NRF24_Sensor/#read-data-from-serial-port","title":"Read data from serial port","text":"<p>Find Serial port <pre><code>python -m serial.tools.list_ports\n/dev/ttyAMA0\n/dev/ttyUSB0\n2 ports found\n</code></pre> The message that arrives on USB port is similar to: <code>b'23;3;172;460;235\\n</code></p> <p>We read the input on the USB port with the following code:</p> my_serial.py<pre><code>import serial\n#Serial takes these two parameters: serial device and baudrate\nser = serial.Serial('/dev/ttyUSB0', 9600)\n\nwhile True:\n    data = ser.readline()\n    d=data.decode()\n    dd = d.rstrip(\"\\n\")\n    ddd=dd.split(';')\n\n    count = ddd[0]\n    id = ddd[1]\n    temp = str(float(ddd[2]) / 10)\n    lumi = str(float(ddd[3]) / 10)\n    humi = ddd[4]\n\n    print(f\"\\ncount `{count}`\")\n    print(f\"id `{id}`\")\n    print(f\"Temp `{temp}\u00b0C`\")\n    print(f\"Lumi `{lumi}`\")\n    print(f\"Humi `{humi}`\")\n</code></pre>"},{"location":"Home-Assistant/Communication_and_Protocols/MQTT/MQTT_NRF24_Sensor/#mqtt-submit","title":"MQTT Submit","text":"<p>First, install MQTT library</p> <pre><code>pip install paho-mqtt\n</code></pre>"},{"location":"Home-Assistant/Communication_and_Protocols/MQTT/MQTT_NRF24_Sensor/#example","title":"Example :","text":"<p>We want to submit json: <code>#!{\"Temperature\":11.44751815947774,\"Humidite\":85.19176787958504\"}</code> on topic <code>NRF24/Cuisine</code></p> <pre><code># python 3.6\n\n# See https://www.emqx.com/en/blog/how-to-use-mqtt-in-python\n\nimport random\nimport time\n\nfrom paho.mqtt import client as mqtt_client\n\nbroker = 'homeassistant.local'\nport = 1883\nclient_id = f'NRF24_sensor_2.4_GHz'\nusername = 'homeassistant'\npassword = 'weiyai1eFeidaeLithoom6go0OhThooz1IePhaiPh0thae5haephei5siele8aM2'\n\ndef connect_mqtt():\n    def on_connect(client, userdata, flags, rc):\n        if rc == 0:\n            print(\"Connected to MQTT Broker!\")\n        else:\n            print(\"Failed to connect, return code %d\\n\", rc)\n\n    client = mqtt_client.Client(client_id)\n    client.username_pw_set(username, password)\n    client.on_connect = on_connect\n    client.connect(broker, port)\n    return client\n\n\ndef publish(client):\n    while True:\n        time.sleep(1)\n        # {\"Temperature\":11.44751815947774,\"Humidite\":85.19176787958504\"}\"\n\n        ## Cuisine\n        topic = \"NRF24/Cuisine\"\n        temp = random.uniform(10.0, 20.0)\n        humi = random.uniform(80.0, 99.0)\n        msg = '{\"temperature\": ' + str(temp) + ',\"humidite\": ' + str(humi) + '}'\n        result = client.publish(topic, msg)\n        # result: [0, 1]\n        status = result[0]\n        if status == 0:\n            print(f\"Send `{msg}` to topic `{topic}`\")\n        else:\n            print(f\"Failed to send message to topic {topic}\")\n\ndef run():\n    client = connect_mqtt()\n    client.loop_start()\n    publish(client)\n\nif __name__ == '__main__':\n    run()\n</code></pre> <p>See the result with MQTT Explorer </p> <p></p> <pre><code># python 3.6\n\n# See https://www.emqx.com/en/blog/how-to-use-mqtt-in-python\n\nimport random\nimport time\n\nfrom paho.mqtt import client as mqtt_client\n\n\nbroker = 'homeassistant.local'\nport = 1883\n# generate client ID with pub prefix randomly\nclient_id = f'RaspCuisine'\nusername = 'homeassistant'\npassword = 'weiyai1eFeidaeLithoom6go0OhThooz1IePhaiPh0thae5haephei5siele8aM2'\n\ndef connect_mqtt():\ndef on_connect(client, userdata, flags, rc):\nif rc == 0:\nprint(\"Connected to MQTT Broker!\")\nelse:\nprint(\"Failed to connect, return code %d\\n\", rc)\n\nclient = mqtt_client.Client(client_id)\nclient.username_pw_set(username, password)\nclient.on_connect = on_connect\nclient.connect(broker, port)\nreturn client\n\n\ndef publish(client):\nwhile True:\ntime.sleep(1)\n# {\"Temperature\":11.44751815947774,\"Humidite\":85.19176787958504\"}\"\n\n## Cuisine\ntopic = \"NRF24/Cuisine\"\ntemp = random.uniform(10.0, 20.0)\nhumi = random.uniform(80.0, 99.0)\nmsg = '{\"temperature\": ' + str(temp) + ',\"humidite\": ' + str(humi) + '}'\nresult = client.publish(topic, msg)\n# result: [0, 1]\nstatus = result[0]\nif status == 0:\nprint(f\"Send `{msg}` to topic `{topic}`\")\nelse:\nprint(f\"Failed to send message to topic {topic}\")\n\ndef run():\nclient = connect_mqtt()\nclient.loop_start()\npublish(client)\n\nif __name__ == '__main__':\nrun()\n</code></pre> <p>Finaly: <pre><code># python 3.6\n\n\nimport random\nimport time\nimport serial\nser = serial.Serial('/dev/ttyUSB0', 9600)\n\nfrom paho.mqtt import client as mqtt_client\n\nbroker = 'homeassistant.local'\nport = 1883\n# generate client ID with pub prefix randomly\nclient_id = f'RaspCuisine'\nusername = 'homeassistant'\npassword = 'weiyai1eFeidaeLithoom6go0OhThooz1IePhaiPh0thae5haephei5siele8aM2'\n\ndef connect_mqtt():\n    def on_connect(client, userdata, flags, rc):\n        if rc == 0:\n            print(\"Connected to MQTT Broker!\")\n        else:\n            print(\"Failed to connect, return code %d\\n\", rc)\n\n    client = mqtt_client.Client(client_id)\n    client.username_pw_set(username, password)\n    client.on_connect = on_connect\n    client.connect(broker, port)\n    return client\n\n\ndef publish(client):\n    while True:\n        # Wait for a new line on the serial port\n        # b'23;3;172;460;235\\n'\n        data = ser.readline()\n        d=data.decode()\n        dd = d.rstrip(\"\\n\")\n        ddd=dd.split(';')\n\n        # Decrypt received string\n        count = ddd[0]\n        id = ddd[1]\n        temp = str(float(ddd[2]) / 10)\n        lumi = ddd[3]\n        humi = str(float(ddd[4]) / 10)\n        print(f\"\\ncount `{count}`\")\n        print(f\"id `{id}`\")\n        print(f\"Temp `{temp}\u00b0C`\")\n        print(f\"Lumi `{lumi}`\")\n        print(f\"Humi `{humi}`\")\n\n        topic = \"NRF24/Unknow Sensor\"\n        # Submit the values to the correct topic\n        if (id == \"13\"): # Cuisine\n            topic = \"NRF24/Cuisine_NRF24\"\n        elif (id == \"2\"): # Bureau\n            topic = \"NRF24/Bureau_NRF24\"\n        elif (id == \"3\"): # Chambre parents\n            topic = \"NRF24/Chambre_parent_NRF24\"\n        elif (id == \"4\"): # Chambre parents\n            topic = \"NRF24/Garage_NRF24\"\n        elif (id == \"5\"): # Exterieur devant maison\n            topic = \"NRF24/Exterieur_NRF24\"\n        elif (id == \"11\"): # Salle de bain\n            topic = \"NRF24/Salle_de_bain_NRF24\"\n        elif (id == \"12\"): # Vide sanitaire\n            topic = \"NRF24/Vide_sanitaire_NRF24\"\n        elif (id == \"19\"): # Chambre Damien\n            topic = \"NRF24/Chambre_Damien_NRF24\"\n        elif (id == \"22\"): # Chambre Am\u00e9lie\n            topic = \"NRF24/Chambre_Amelie_NRF24\"\n        else:\n            print(\"Unknow id\")\n\n        msg = '{\"temperature\": ' + temp + ',\"humidite\": ' + humi + '}'\n        print (msg)\n        result = client.publish(topic, msg)\n        # result: [0, 1]\n        status = result[0]\n        if status == 0:\n            print(f\"Send `{msg}` to topic `{topic}`\")\n        else:\n            print(f\"Failed to send message to topic {topic}\")\n\ndef run():\n    client = connect_mqtt()\n    client.loop_start()\n    publish(client)\n\nif __name__ == '__main__':\n    run()\n</code></pre></p> <p>Edit the file /etc/rc.local using the editor of your choice. You must edit it with root permissions: <pre><code>sudo vi /etc/rc.local\n</code></pre> Add <pre><code># Read NRF24\npython /home/pi/Desktop/Cuisine/waitAndSubmitValues.py &amp;\n</code></pre></p>"},{"location":"Home-Assistant/Communication_and_Protocols/WiFi_and_Connectivity/Use_wifi_on_Intel_Nuc/","title":"Use Wifi on Intel NUC","text":""},{"location":"Home-Assistant/Communication_and_Protocols/WiFi_and_Connectivity/Use_wifi_on_Intel_Nuc/#install-firmware-iwlwifi","title":"Install firmware-iwlwifi","text":"<p>Info</p> <p>Iwlwifi (Intel Wireless WiFi Link) is the driver for Intel wireless cards.</p>"},{"location":"Home-Assistant/Communication_and_Protocols/WiFi_and_Connectivity/Use_wifi_on_Intel_Nuc/#add-a-non-free-component-to-the-apt-sources","title":"Add a \"non-free\" component to the apt sources.","text":"<p>Open the file <code>/etc/apt/sources.list</code> and add contrib non-free after main or just copy and paste following lines for Debian 11/Bullseye : sources.list<pre><code>deb http://deb.debian.org/debian bullseye main contrib non-free\ndeb-src http://deb.debian.org/debian bullseye main contrib non-free\n\ndeb http://deb.debian.org/debian-security/ bullseye-security main contrib non-free\ndeb-src http://deb.debian.org/debian-security/ bullseye-security main contrib non-free\n\ndeb http://deb.debian.org/debian bullseye-updates main contrib non-free\ndeb-src http://deb.debian.org/debian bullseye-updates main contrib non-free\n</code></pre></p>"},{"location":"Home-Assistant/Communication_and_Protocols/WiFi_and_Connectivity/Use_wifi_on_Intel_Nuc/#update-the-list-of-available-packages-and-install-the-iwlwifi-package","title":"Update the list of available packages and install the iwlwifi package","text":"<p><pre><code>apt update &amp;&amp; apt install firmware-iwlwifi\n</code></pre> <pre><code>modprobe -r iwlwifi ; modprobe iwlwifi\n</code></pre></p>"},{"location":"Home-Assistant/Communication_and_Protocols/WiFi_and_Connectivity/Use_wifi_on_Intel_Nuc/#finally-connect-to-your-wifi-network","title":"Finally connect to your wifi network","text":"<p>Use the gnome network manager to connect to your wifi network.</p>"},{"location":"Home-Assistant/Communication_and_Protocols/Zigbee_and_ZWave/Zigbee/","title":"Zigbee device","text":""},{"location":"Home-Assistant/Communication_and_Protocols/Zigbee_and_ZWave/Zigbee/#zigbee-dongle","title":"Zigbee dongle","text":"<p>Doc from Aliexpress</p> <pre><code>Description\nReport Item\nZigbee 3.0 USB Dongle Based on Silicon Labs EFR32MG21 Universal Zigbee Gateway\nZB-GW04 USB Dongle Support via ZHA Zigbee2MQTT Connect Zigbee Device\n\nNotice:\nThis ZigBee 3.0 usb dongle already with ZigBee2MQTT software pre flashed.\n\nFeature:\n\nIt comes pre-flashed with an unsigned EmberZNet 6.7.9 Zigbee NCP application\nfirmware with Silabs standard EZSP v8 (EmberZNet Serial Protocol version 8)\ninterface enabled as well as the standard Silabs Gecko Bootloader firmware\nfor recovery, meaning it can be used either as-is out-of-the-box or flashed\nwith custom application firmware via USB.\n\nHardware is at its core based onSilicon Labs EFR32MG21 Series 2 Multiprotocol\nWireless SoC(part numberEFR32MG21A020F768IM32) and aWCH CH340E USB to Serial/UART\nBridge Controller. While it only has a PCB circuit board antenna the radio has\nan integrated +20 dBm Power Amplifier (output power) and -104.5 dBm Receive\nSensitivity which should be made for a very good Zigbee coordinator or Zigbee\nrouter if both hardware and firmware were properly implemented.\n\nTheElelabs EZSP Firmware Upgrade Utility(https://github.com/Elelabs/elelabs-zigbee-ezsp-utility/)\norwalthowd firmware update Docker image(https://github.com/walthowd/husbzb-firmware)\ncan be used to flash the firmware to a newer or older version. New and old firmware\nofficial images are currently being provided at github\n(https://github.com/xsp1989/zigbeeFirmware/tree/master/firmware/Zigbee3.0_Dongle)\n\nIf the device is following Zigbee standards it is possible it will work with\nother gateway solutions, it is just not confirmed as working yet!\n\nSpecification:\n\nProduct model: ZB-GW04 USB dongle\nPre-flashed with EZSP v8 (EmberZNet Serial Protocol version 8)\nCan use ZHA in Home Assistant or Zigbee2MQTT (pre-alpha)\nBase on EFR32MG21+CH340E\n+20dBm output gain\uff0cPCB antenna\nPlastic Shell\nSupport OTA Via Uart (Press the BOOT button,then press and release\n  the nRST button, finally release the BOOT button)\nBaud rate: 115200\n</code></pre> <p> </p> <p> </p> <p> </p>"},{"location":"Home-Assistant/Communication_and_Protocols/Zigbee_and_ZWave/Zigbee/#pir-sensor","title":"Pir sensor","text":"<p>Zigbee Mini PIR Motion Sensor Human Motion Infrared Detector Security Alarm Work With Alexa Google Home Zigbee2MQTT Need Gateway</p> <p></p> <p>Sensor purchased on Aliexpress:</p> <p></p> <p>Aliexpress description : <pre><code>Product Name: Zigbee PIR Motion Sensor\nWireless Procotol: Zigbee 3.0(Zigbee gateway is needed)\nOperating Voltage: 3V\nBattery Type: CR2450\nStand-by Time: 1 Year\nApp: eWelink\nMaterial: ABS\nDimensions:  \u03a6 33*28mm\n\nMini body, small and exquisite.\nHuman motion detection, instant App notification, no missing alarm.\nHigh precision infrared detector, more accurate.\nAirflow suppression, avoid false detection.\nIntelligent linkage with other ewelink products.\nMulti-scenario application, easy to install.\n</code></pre> </p>"},{"location":"Home-Assistant/Communication_and_Protocols/Zigbee_and_ZWave/Zigbee/#home-assistant-installation","title":"Home assistant installation","text":"<p>Add a new sensor</p> <p></p> <p></p> <p></p>"},{"location":"Home-Assistant/Communication_and_Protocols/Zigbee_and_ZWave/Zigbee/#switch","title":"Switch","text":"<p>Aliexpress description: <pre><code>Zigbee gateway is needed, ewelink zigbee hub/Zigbee2MQTT, Tuya not compatible currently!\n\nNote: Intelligent linkage to ewelink smart devices for normal use only, `\ncan not be used alone without ewelink smart device.\n\nSpecifications:\nPower supply: Battery CR2032 3V DC(included)\nCommunication: Zigbee 3.0 *(zigbee hub is needed, except Tuya)\nControl distance: 30m open area\nDimensions: 50 X 50mm\nOperating temperature: -10 \u00b0C~55 \u00b0C\nWorking Humidity: 0~99%RH\nLife of battery: 2 years (General use)\n\nPackage Content:\n1* Zigbee Smart Button\n1* User Manual\n1* Double-sided Sticker\n1* CR2032 Battery\n\n\u3010Two-in-one device for wireless scene\u3011In the scene mode, the button respectively\nsupport single click, double click scene requirements. You don't need to click the\nscene mode on your phone, just click the ZigBee smart remote control to open the smart scene.\n\n\u3010No need to install\u3011 Can be hung on the wall, can also be placed on the table,\nand you can get it at your fingertips.\n\n\u3010Create multiple intelligent scenes for ewelink smart devices in App under\nscenario mode\u3011To create any smart automation as you want on your smart phone\napp to start your another intelligent lifestyle, when you are tired from one-day\nwork,such as home mode, waterproof level up to IP55 for wider applications.\n</code></pre></p>"},{"location":"Home-Assistant/Communication_and_Protocols/Zigbee_and_ZWave/Zigbee/#home-assistant-installation_1","title":"Home assistant installation","text":"<p>See pir sensor installation</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/PZEM-004T/","title":"PZEM 004T","text":"<p>PZEM-004T</p> <p> </p> <p> </p> <pre><code>esphome:\n    name: \"energy-meter\"\n    comment: 'PZEM-004T power Meter'\n\nesp8266:\n    board: d1_mini\n\n# Enable logging\nlogger:\n    #level: VERY_VERBOSE\n\nweb_server:\n    port: 80\n\napi:\n\nota:\n\nwifi:\n    ssid: !secret wifi_ssid\n    password: !secret wifi_password\n\n# Enable fallback hotspot (captive portal) in case wifi connection fails\nap:\n    ssid: \"Power-Meter Fallback Hotspot\"\n    password: \"rdG3mcBzeb32\"\n\nuart:\n    rx_pin: D1\n    tx_pin: D2\n    baud_rate: 9600\n\ncaptive_portal:\n\nmodbus:  # enable Modbus\n\nsensor:\n    - platform: pzemac\n        current:\n            name: 'Current'\n        voltage:\n            name: 'Voltage'\n    energy:\n        name: 'Energy'\n        # convert it to kWh\n        #filters:\n        #  - multiply: 0.001\n        #unit_of_measurement: 'kWh'\n        #accuracy_decimals: 3\n    power:\n        name: 'Power'\n    frequency:\n        name: 'Frequency'\n    power_factor:\n        name: 'Power Factor'\n    update_interval: 60s\n</code></pre> <p> </p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/","title":"Installation of Z-Wave and Qubino entities","text":"<p>Plug the Z-Wave usb dongle on your Home Assistant server</p> <p>The dongle is automaticaly reconnized</p> <p> </p> <p> </p> <p></p> <p>That's all!</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/#old-instructions","title":"Old instructions","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/#qubino-flush-2-relay-on-an-electric-radiator","title":"Qubino Flush 2 relay on an electric radiator","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/#model","title":"Model","text":"<p>Info</p> <p>Site de Qubino : https://qubino.com/products/flush-2-relays/</p> <p> </p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/#wire","title":"Wire","text":"<p>Replace the bulb with the radiator!!!</p> <p> </p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/#home-assistant-config","title":"Home Assistant Config","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/#rename-relay","title":"Rename relay","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Qubino/#if-the-relay-is-no-longer-accessible","title":"If the relay is no longer accessible","text":"<p>Note</p> <p>Read documentation.</p> <p>Do a factory reset : Unplug - replug 5 times in less than 3 seconds in the first minute of operation!</p> <p>Info</p> <p>FACTORY RESET     1. Connect the device to the power supply     2. Within the first minute (60 seconds) the device is connected to the &gt;power supply, toggle the switch connected to the I1 terminal 5 times &gt;within 3 seconds (5 times change switch state).</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/","title":"Shelly 1 with MQTT","text":"<p>How to use Shelly 1 &amp; Shelly 1PM with Home Assistant</p> <p>Info</p> <p>An other interested page is https://sequr.be/blog/2020/10/getting-started-with-mqtt-and-home-assistant-and-shelly/</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#shelly-1-shelly-1pm","title":"Shelly 1 &amp; Shelly 1PM","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#wire","title":"Wire","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#shelly-1pm","title":"Shelly 1PM","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#_1","title":"Shelly 1 with MQTT","text":"<p>Do not use with a ceramic hob, it can consume more than 3500 W (Shelly 1PM limit)</p> <p></p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#how-to-reset-shelly-1pm","title":"How to reset Shelly 1PM","text":"<ul> <li>video : Reset the device : youtube video</li> <li>Reset : On - 5 times off - On</li> <li>go to http://192.168.33.1</li> </ul>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#configuration-shelly-device-solution-1-with-the-web-browse","title":"Configuration Shelly device : Solution 1 (with the Web browse)","text":"<p>Configuration method with the Web browser. We do not use the Shelly application.</p> <p>Info</p> <p>This is the best solution. In fact app. Shelly v.1.35.22 doesn't work.</p> <ol> <li>plug the Shelly device.</li> <li>connect to the Shelly network</li> <li>In a browser, go to http://192.168.33.1 (see below)</li> <li>Configure the Shelly device</li> </ol> <p>Find the Shelly network</p> <p></p> <p>Connect to http://192.168.33.1</p> <p></p> <p>Configure the network</p> <p> </p> <p>Change your wi-fi network back to your home network. Find the new device on your wifi network. You can use LanScan app. (on App Store )</p> <p>Update the firmware</p> <p></p> <p>Remove the cloud</p> <p></p> <p>Configure MQTT. See below</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#solution-2","title":"Solution 2","text":"<p>Plug in the Shelly. It does not appear on the network. You have to go on the Shelly app first to declare it. It's not necessary to go to the end of the installation. We can stop when we ask for the name of the device.</p> <p> </p> <p>You can now find the device on the networker. In my example the IP of the device is 10.0.4. Go to the web interface of the Shelly and remove the connection to the cloud.</p> <p></p> <p>Warning</p> <p>Update the device. It's necessery to have CoIot protocol.</p> <p></p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#configure-mqtt","title":"Configure MQTT","text":"<p>To configure MQTT protocol, fill in the fields with values defined in Home Assistant.</p> <p></p> <p>Username and password are in the Mosquitto configuration. Password is a very long string</p> <p> </p> <p>Set \"Restore Last Mode - Configure Shelly device to Restore the last mode it was in, when it has power.\"</p> <p></p> <p>Now, you can reboot the Shelly.</p> <p></p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#home-assistant-configuration","title":"Home Assistant configuration","text":"<p>The configuration of the Shelly device is now finished. Go to Home Assistant for the last step.</p> <p> </p> <p> </p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#static-ip","title":"Static IP","text":"<p>Now you can change the IP on your router to have a static IP</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-1PM-MQTT/#rename-entitie","title":"Rename entitie","text":"<p>Go to web interface and rename the Shelly</p> <p>Go to Shelly configaration parameters on Home Assistant. Rename by clicking on the three dots menu</p> <p> </p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-EM-MQTT/","title":"Shelly EM with MQTT","text":"<p>How to use Shelly EM with Home Assistant</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-EM-MQTT/#shelly-em-wire","title":"Shelly EM / Wire","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-EM-MQTT/#configuration","title":"Configuration","text":""},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-EM-MQTT/#shelly-configuration","title":"Shelly configuration","text":"<p>Plug in the Shelly. It does not appear on the network. You have to go on the Shelly app first to declare it. It's not necessary to go to the end of the installation. We can stop when we ask for the name of the device.</p> <p> </p> <p> </p> <p>You can now find the device on the networker. In my example the IP of the device is 10.0.114. Go to the web interface of the Shelly and disable the connection to the cloud.</p> <p></p> <p>Warning</p> <p>Update the device. It's necessery to have CoIot protocol.</p> <p></p> <p>To configure MQTT protocol, fill in the fields with values defined in Home Assistant.</p> <p> </p> <p>Info</p> <p>Username and password are in the Mosquitto configuration. Password is a very long string</p> <p> </p> <p></p> <p>Now, you can save and reboot the Shelly.</p>"},{"location":"Home-Assistant/Energy_Management/Energy_Monitorig/Shelly-EM-MQTT/#home-assistant-configuration","title":"Home Assistant configuration","text":"<p>The configuration of the Shelly device is now finished. Go to Home Assistant for the last step.</p> <p> </p> <p> </p> <p></p> <p> </p>"},{"location":"Home-Assistant/Energy_Management/Smart_Plugs_and_Devices/Tasmota-plug/","title":"Tasmota - Athom Plug V2","text":""},{"location":"Home-Assistant/Energy_Management/Smart_Plugs_and_Devices/Tasmota-plug/#configuration-of-tasmota-plug","title":"Configuration of Tasmota plug","text":"<p>Open Tasmota plug web page (here 10.0.4.97)</p> <p> </p> <p>Find passord</p> <p>Go to MQTT configaration panel to find home assiatnt password.</p> <p> </p> <p>Copy/passed password into Tasmota plug page.</p> <p>Wait a few seconds. The new Tasmota plug is automaticaly discored.</p> <p></p> <p></p> <p></p>"},{"location":"Home-Assistant/Energy_Management/Smart_Plugs_and_Devices/Tasmota-plug/#to-reset-total-energey","title":"To reset total energey","text":"<pre><code>EnergyReset3 0\n</code></pre> <p>Warning</p> <p>Warning: With version 10, this command has been replaced See: https://tasmota.github.io/docs/Commands/#power-monitoring</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Environmental_Monitoring/ESP01-D1-Mini_Water_tank_monitoring/","title":"Water tank monitoring (ESP01-D1-Mini + JSN SR04T ultrasonic sensor)","text":"<p>Danger</p> <p>IT DOESN'T WORK!</p> <p>The waves from the ultrasonic sensor bounce back into the water tank, the values \u200b\u200bare random!</p> <p> </p> <p>See Markus Haack page. It's very easy.</p> <pre><code>esphome:\n  name: esp8266-d1-mini-5\n  platform: ESP8266\n  board: d1_mini\n  comment: 'R\u00e9cup\u00e9rateur pluie'\n  friendly_name: R\u00e9cup\u00e9rateur pluie\n\n# to access via web client\nweb_server:\n  port: 80\n\n# Enable logging\nlogger:\n\n# Enable Home Assistant API\napi:\n  encryption:\n    key: \"GS+SsOzUZE+AO6auwnAstFXOuRdEWw+m2u1JUXD/4yk=\"\n\nota:\n  password: \"f0f2837dae99683a6763cd027e625b87\"\n\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n\n  # Enable fallback hotspot (captive portal) in case wifi connection fails\n  ap:\n    ssid: \"Esp8266-D1-Mini-5\"\n    password: \"pCwHEc4amTdt\"\n\ncaptive_portal:\n\nsensor:\n # Wifi signal sensor.\n - platform: wifi_signal\n   name: garden_watertank_wifi\n   update_interval: 600s\n   unit_of_measurement: '%'\n   filters:\n    - lambda: |-\n       if (x &lt;= -100) {\n         return 0;\n       } else {\n         if (x &gt;= -50) {\n           return 100;\n         } else {\n           return 2 * (x + 100);\n         }\n       }\n\n# Templates for calculated liter &amp; percent\n - platform: template\n   name: garden_watertank_liter\n   id: garden_watertank_liter\n   icon: 'mdi:water'\n   unit_of_measurement: 'l'\n   accuracy_decimals: 0\n\n - platform: template\n   name: garden_watertank_percent\n   id: garden_watertank_percent\n   icon: 'mdi:water-percent'\n   unit_of_measurement: '%'\n\n# The actual distance sensor\n# pulse_time - timeout : 40 - 4 : 180m / 60us - 6m : 210m / 100us - 6m : 220m / 100us - 5m : 230m\n# [W][component:237]: Component ultrasonic.sensor took a long time for an operation (53 ms).\n# [W][component:238]: Components should block for at most 30 ms.\n\n - platform: ultrasonic\n   trigger_pin: D1\n   echo_pin: D2\n   name: garden_watertank_distance\n   update_interval: 4s\n   pulse_time: 100us\n   timeout: 5m\n  # Don't work\n  # filters:\n  #  - filter_out: nan\n  #  - median:\n  #     window_size: 7\n  #     send_every: 4\n  #     send_first_at: 3\n  #  - calibrate_linear:\n  #     - 0.23 -&gt; 1.86\n  #     - 2.41 -&gt; 0.0\n   on_value:\n    then:\n     - sensor.template.publish:\n        id: garden_watertank_liter\n        state: !lambda 'return x * 3141.592653589793238;'\n\n     - sensor.template.publish:\n        id: garden_watertank_percent\n        state: !lambda 'return x * 53.979255216319471;'\n</code></pre>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Environmental_Monitoring/SoilSensor/","title":"Soil Sensor","text":"<p>Si tout est OK, un click envoie la valeur courenta</p> <p>Si suite \u00e0 un click, la lui\u00e8re clignote, c'est qu'il y a un probl\u00e9me dans l'\u00e9mission</p> <p>Pour refaire l'appariement, click de 4 \u00e0 5'', la led clignote tr\u00e8s rapidement puis sur \"activer l'appairage\", aller dans \"tableau de bord\", la roue \u00e0 cot\u00e9 du nom du sensor tourne puis s'arrete, tout devrait \u00eatre bon</p> <p>Si correctement connect\u00e9, un click long (&gt; 4'') arr\u00eate la connection pour la r\u00e9tablie</p> <p>Une valeur est envoy\u00e9e toute les 30'' \u00e0 40''</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Environmental_Monitoring/TOF400C-VL53L1X/","title":"Time Of Flight TOF400C-VL53L1X","text":""},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Environmental_Monitoring/TOF400C-VL53L1X/#water-level","title":"Water level","text":"<pre><code>esphome:\n  name: esp8266-d1-mini-v2-72\nfriendly_name: Water level\ncomment: 'Tank water level'\n\nincludes:\n    - tof_vl53l1x.h\nlibraries:\n    - \"Wire\"\n    - \"VL53L1x\"\n\nesp8266:\nboard: esp01_1m\n\n\n# to access via web client\nweb_server:\nport: 80\n\n\n# Enable logging\nlogger:\n\n# Enable Home Assistant API\napi:\nencryption:\n    key: \"SMrDZh99VVEXfRfS7NoNykdc0WTPUV8krV8JUV0wVdQ=\"\n\nota:\npassword: \"cb3f49f6a47cdc0b761141653e546f19\"\n\nwifi:\nssid: !secret wifi_ssid\npassword: !secret wifi_password\n\n# Enable fallback hotspot (captive portal) in case wifi connection fails\nap:\n    ssid: \"Esp8266-D1-Mini-V2-72\"\n    password: \"6hGar0WOd0UK\"\n\ncaptive_portal:\n\n# the vl53l0x is i2c\n#i2c:\n#  scan: true\n\n# Muliple VL53L0X sensors on same i2c bus\n# Example configuration entry\n#sensor:\n#  - platform: vl53l0x\n#    name: \"distance1\"\n#    id: distance1\n#    address: 0x41\n#    enable_pin: GPIO0\n#    timeout: 200us\n#    update_interval: 1s\n#    unit_of_measurement: \"m\"\n#  - platform: wifi_signal\n#    name: \"WiFi Signal Sensor\"\n#    update_interval: 5s\n\n# https://esphome.io/components/i2c.html\ni2c:  # example for Wemos LOLIN D2 mini\nsda:  GPIO4\nscl:  GPIO5\nscan: False\n#address: 0x29\nfrequency: 400kHz\n\nsensor:\n\n- platform: wifi_signal\nname: \"WiFi Signal Sensor\"\nupdate_interval: 60s\n\n- platform: custom\nlambda: |-\n    auto my_VL53L1X_sensor = new VL53L1XCustomSensor();\n    my_VL53L1X_sensor-&gt;set_update_interval(2000); // define update interval\n    App.register_component(my_VL53L1X_sensor);\n    return {my_VL53L1X_sensor};\nsensors:\n    name: \"Distance\"\n    accuracy_decimals: 0\n    unit_of_measurement: \"mm\"\n</code></pre>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/","title":"Heating Management with Home Assistant, Shelly Plus 1PM, and ZWT198 Thermostat","text":""},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#introduction","title":"Introduction","text":"<p>This project details the integration and automation of a heating system using:</p> <ul> <li>Home Assistant (HA) as the central platform.</li> <li>A Zigbee Thermostat (ZWT198) for temperature measurement and setpoint management.</li> <li>A Shelly Plus 1PM to control the electric radiator.</li> </ul> <p>The goal is to enable bidirectional management between the thermostat and Home Assistant while automating radiator control.</p> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#key-features","title":"Key Features","text":"<ol> <li> <p>Bidirectional Management:</p> <ul> <li>Modify the setpoint directly on the thermostat or via Home Assistant.</li> <li>Automatic adaptation and state synchronization.</li> </ul> </li> <li> <p>Automation:</p> <ul> <li>The radiator is controlled based on the thermostat's state (active heating or not).</li> </ul> </li> <li> <p>Energy Monitoring:</p> <ul> <li>Monitor radiator consumption through the integrated Shelly Plus 1PM.</li> </ul> </li> </ol>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#wiring-between-the-radiator-and-shelly-plus-1pm","title":"Wiring Between the Radiator and Shelly Plus 1PM","text":"<p>The Shelly Plus 1PM is used to control the power supply to the radiator. Here are the steps to correctly connect the radiator:</p> <ol> <li> <p>Wiring Diagram:</p> <p></p> </li> <li> <p>Detailed Instructions:</p> <ul> <li>Connect the phase wire from the main power supply to the Shelly's input terminal (labeled <code>L</code>).</li> <li>Connect the Shelly's output terminal (labeled <code>O</code>) to the phase wire of the radiator.</li> <li>Directly connect the neutral wire from the main power supply to the radiator.</li> <li>If required, connect the ground wire directly to the radiator (the Shelly does not have a ground terminal).</li> </ul> </li> </ol>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#radiator-control-automation","title":"Radiator Control Automation","text":"<p>This automation links the thermostat to the Shelly.</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#automationsyaml-file","title":"<code>automations.yaml</code> File:","text":"<pre><code>alias: Radiator Control via ZWT198 Thermostat\ndescription: &gt;\n  Synchronizes the radiator connected to the Shelly with the Zigbee thermostat.\n  When the thermostat requests heating, the Shelly turns on.\n  Otherwise, it turns off automatically.\n\ntriggers:\n  - entity_id: climate.zigbee_thermostat\n    attribute: hvac_action\n    trigger: state\nconditions: []\nactions:\n  - choose:\n      - conditions:\n          - condition: state\n            entity_id: climate.zigbee_thermostat\n            attribute: hvac_action\n            state: heating\n        sequence:\n          - target:\n              entity_id: switch.salle_a_manger_radiateur_shelly_1pm_switch_0\n            action: switch.turn_on\n            data: {}\n      - conditions:\n          - condition: state\n            entity_id: climate.zigbee_thermostat\n            attribute: hvac_action\n            state: idle\n        sequence:\n          - target:\n              entity_id: switch.salle_a_manger_radiateur_shelly_1pm_switch_0\n            action: switch.turn_off\n            data: {}\nmode: single\n</code></pre>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#configuration-in-home-assistant","title":"Configuration in Home Assistant","text":""},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#zigbee-thermostat-zwt198","title":"Zigbee Thermostat (ZWT198)","text":"<p>The thermostat is added to Home Assistant via a Zigbee gateway. The entity is detected as <code>climate.zigbee_thermostat</code>.</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#example-lovelace-card","title":"Example Lovelace Card:","text":"<p><pre><code>- type: thermostat\n  entity: climate.zigbee_thermostat\n  name: Dining Room Thermostat\n</code></pre> </p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#energy-consumption-monitoring","title":"Energy Consumption Monitoring","text":"<p>The Shelly Plus 1PM measures the radiator's electrical consumption. Activate the <code>sensor.power</code> entity in Home Assistant to monitor power usage.</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#example-lovelace-graph","title":"Example Lovelace Graph:","text":"<pre><code>chart_type: line\nperiod: 5minute\ntype: statistics-graph\nentities:\n  - sensor.salle_a_manger_radiateur_shelly_1pm_switch_0_power\nstat_types:\n  - mean\ntitle: Consommation radiateur\nhide_legend: true\ngrid_options:\n  columns: 12\n  rows: 5\ndays_to_show: 1\n</code></pre>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#zwt198-thermostat-settings","title":"ZWT198 Thermostat Settings","text":"<p>Programming Mode:</p> <ul> <li>Set Time and Day:</li> <li> <p>Press and hold the \"M\" button for 3 to 5 seconds to adjust the current time and day settings.</p> </li> <li> <p>Activate Zigbee Pairing:</p> </li> <li> <p>Press and hold the up arrow (\u25b2) for 3 seconds to initiate Zigbee pairing mode.</p> </li> <li> <p>Child Lock:</p> </li> <li> <p>Simultaneously press both the up (\u25b2) and down (\u25bc) arrows to enable or disable the child lock feature.</p> </li> <li> <p>Enter Time Slot Programming Mode:</p> </li> <li>Press the \"M\" button and the down arrow (\u25bc) together to access the time slot programming mode.</li> </ul>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/100_thermostat_automation/#visual-feedback-with-wled","title":"Visual Feedback with WLED","text":"<p>To enhance the usability of the heating system, a WLED addressable LED strip has been integrated to act as a visual indicator of the radiator\u2019s state. This feature ensures that the heating status is always visible, even at a glance, reducing the risk of leaving the radiator on unintentionally.</p> <p>The WLED integration serves multiple purposes. First, it allows for a quick status check:</p> <ul> <li> <p>Red Light: Indicates that the radiator is actively heating.</p> </li> <li> <p>Off: Confirms that the radiator has been manually or automatically turned off.</p> </li> </ul> <p><pre><code>alias: \"ZWT198-SALON : Change WLED color based on ZWT198 thermostat\"\ndescription: &gt;-\n  Turns the WLED red when the thermostat is heating and either turns it blue\n  or off when the thermostat is idle.\n\ntriggers:\n  # Trigger: Detect changes in the hvac_action attribute of the ZWT198 thermostat.\n  # This automation reacts when the thermostat switches between \"heating\"\n  # (active heating) and \"idle\" (not heating).\n  - entity_id: climate.zigbee_thermostat\n    attribute: hvac_action\n    trigger: state  # Trigger whenever hvac_action changes state.\n\nactions:\n  - choose:\n      # Action 1: Turn the WLED red when the thermostat is heating.\n      - conditions:\n          # Condition: Check if the ZWT198 thermostat's hvac_action is set to \"heating\".\n          - condition: state\n            entity_id: climate.zigbee_thermostat\n            attribute: hvac_action\n            state: heating\n        sequence:\n          # Sequence: Turn the WLED red at maximum brightness.\n          - target:\n              entity_id: light.salon_wled_2  # Target the WLED light entity.\n            data:\n              color_name: red  # Set the WLED color to red.\n              brightness: 255  # Set brightness to maximum.\n            action: light.turn_on  # Turn on the WLED.\n\n      # Action 2: Change the WLED behavior when the thermostat is idle.\n      - conditions:\n          # Condition: Check if the ZWT198 thermostat's hvac_action is set to \"idle\".\n          - condition: state\n            entity_id: climate.zigbee_thermostat\n            attribute: hvac_action\n            state: idle\n        sequence:\n          # Option 1: Turn the WLED blue at maximum brightness.\n          # Uncomment the following lines to make the WLED blue instead of turning it off.\n          # - target:\n          #     entity_id: light.salon_wled_2  # Target the WLED light entity.\n          #   data:\n          #     color_name: blue  # Set the WLED color to blue.\n          #     brightness: 255  # Set brightness to maximum.\n          #   action: light.turn_on  # Turn on the WLED.\n\n          # Option 2: Turn off the WLED entirely.\n          # By default, this option is enabled.\n          - service: light.turn_off\n            target:\n              entity_id: light.salon_wled_2  # Turn off the WLED.\n\nmode: single  # Ensure only one instance of the automation runs at a time.\n</code></pre> See https://www.hacf.fr/confort-gestion-chauffage/?utm_source=chatgpt.com</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Easy_Schedule/","title":"Thermostat Automation with Custom Daily Schedules","text":"<p>This mini-project aims to configure an intelligent system in Home Assistant to manage a thermostat located in a kitchen. The objective is to enable automatic control based on customized time slots while providing manual management through a user-friendly interface. The project is structured into several steps to ensure a flexible and intuitive setup.</p> <p>The first step is to define the time slots for each day of the week using <code>input_datetime</code> entities. Each day is assigned two time slots with specified start and end times. These entities allow for easy and precise customization of the periods during which the thermostat should be active, such as morning and afternoon.</p> <p>Next, <code>input_boolean</code> entities are associated with each time slot to enable or disable them. These switches allow flexible management directly from the Home Assistant user interface, without requiring modifications to the YAML configuration. They make it easy to temporarily or permanently deactivate a time slot based on specific needs.</p> <p>The third step involves automating the thermostat\u2019s actions. These automations monitor the defined schedules and manage the thermostat's state autonomously. The thermostat automatically activates at the start of an active slot and deactivates at the end. If no slots are active, an automation ensures that the thermostat remains off, optimizing energy consumption.</p> <p>Finally, a custom card is created in the Lovelace interface to combine the display of current time slots and an interactive thermostat control button. The day\u2019s time slots are displayed on a single line, formatted clearly and separated by \"and.\" The button allows users to easily toggle between the thermostat's \"heating\" and \"off\" modes while visually reflecting its current state. This compact and intuitive card provides quick access to essential information and commands while seamlessly integrating into the Home Assistant dashboard.</p> <p></p> <pre><code>## This code configures two time slots per day for each day of the week.\n# Each time slot has:\n# - A switch (input_boolean) to enable or disable the time slot.\n# - Two time fields (input_datetime) to define the start and end times\n#   for the time slot.\n#\n# Goal:\n# Manage two distinct periods per day during which specific actions can\n# be performed. The schedules and activation of the time slots are\n# configurable via the user interface (Lovelace) without modifying\n# the YAML file.\n#\n# Usage example:\n# - Turn on a light or device between 08:00 and 12:00 for the first\n#   time slot and between 14:00 and 18:00 for the second time slot.\n# - Different days can have independent time slots activated or\n#   deactivated.\n#\n# This configuration is designed to be persistent (time schedules are\n# retained after a Home Assistant restart).\n\ninput_boolean:\n  # Monday\n  monday_slot1_active:\n    name: Activate Slot 1 - Monday\n  monday_slot2_active:\n    name: Activate Slot 2 - Monday\n\n  # Tuesday\n  tuesday_slot1_active:\n    name: Activate Slot 1 - Tuesday\n  tuesday_slot2_active:\n    name: Activate Slot 2 - Tuesday\n\n  # Wednesday\n  wednesday_slot1_active:\n    name: Activate Slot 1 - Wednesday\n  wednesday_slot2_active:\n    name: Activate Slot 2 - Wednesday\n\n  # Thursday\n  thursday_slot1_active:\n    name: Activate Slot 1 - Thursday\n  thursday_slot2_active:\n    name: Activate Slot 2 - Thursday\n\n  # Friday\n  friday_slot1_active:\n    name: Activate Slot 1 - Friday\n  friday_slot2_active:\n    name: Activate Slot 2 - Friday\n\n  # Saturday\n  saturday_slot1_active:\n    name: Activate Slot 1 - Saturday\n  saturday_slot2_active:\n    name: Activate Slot 2 - Saturday\n\n  # Sunday\n  sunday_slot1_active:\n    name: Activate Slot 1 - Sunday\n  sunday_slot2_active:\n    name: Activate Slot 2 - Sunday\n\ninput_datetime:\n  # Monday\n  monday_slot1_start:\n    name: Start Slot 1 - Monday\n    has_time: true\n    has_date: false\n  monday_slot1_end:\n    name: End Slot 1 - Monday\n    has_time: true\n    has_date: false\n  monday_slot2_start:\n    name: Start Slot 2 - Monday\n    has_time: true\n    has_date: false\n  monday_slot2_end:\n    name: End Slot 2 - Monday\n    has_time: true\n    has_date: false\n\n  # Tuesday\n  tuesday_slot1_start:\n    name: Start Slot 1 - Tuesday\n    has_time: true\n    has_date: false\n  tuesday_slot1_end:\n    name: End Slot 1 - Tuesday\n    has_time: true\n    has_date: false\n  tuesday_slot2_start:\n    name: Start Slot 2 - Tuesday\n    has_time: true\n    has_date: false\n  tuesday_slot2_end:\n    name: End Slot 2 - Tuesday\n    has_time: true\n    has_date: false\n\n  # Wednesday\n  wednesday_slot1_start:\n    name: Start Slot 1 - Wednesday\n    has_time: true\n    has_date: false\n  wednesday_slot1_end:\n    name: End Slot 1 - Wednesday\n    has_time: true\n    has_date: false\n  wednesday_slot2_start:\n    name: Start Slot 2 - Wednesday\n    has_time: true\n    has_date: false\n  wednesday_slot2_end:\n    name: End Slot 2 - Wednesday\n    has_time: true\n    has_date: false\n\n  # Thursday\n  thursday_slot1_start:\n    name: Start Slot 1 - Thursday\n    has_time: true\n    has_date: false\n  thursday_slot1_end:\n    name: End Slot 1 - Thursday\n    has_time: true\n    has_date: false\n  thursday_slot2_start:\n    name: Start Slot 2 - Thursday\n    has_time: true\n    has_date: false\n  thursday_slot2_end:\n    name: End Slot 2 - Thursday\n    has_time: true\n    has_date: false\n\n  # Friday\n  friday_slot1_start:\n    name: Start Slot 1 - Friday\n    has_time: true\n    has_date: false\n  friday_slot1_end:\n    name: End Slot 1 - Friday\n    has_time: true\n    has_date: false\n  friday_slot2_start:\n    name: Start Slot 2 - Friday\n    has_time: true\n    has_date: false\n  friday_slot2_end:\n    name: End Slot 2 - Friday\n    has_time: true\n    has_date: false\n\n  # Saturday\n  saturday_slot1_start:\n    name: Start Slot 1 - Saturday\n    has_time: true\n    has_date: false\n  saturday_slot1_end:\n    name: End Slot 1 - Saturday\n    has_time: true\n    has_date: false\n  saturday_slot2_start:\n    name: Start Slot 2 - Saturday\n    has_time: true\n    has_date: false\n  saturday_slot2_end:\n    name: End Slot 2 - Saturday\n    has_time: true\n    has_date: false\n\n  # Sunday\n  sunday_slot1_start:\n    name: Start Slot 1 - Sunday\n    has_time: true\n    has_date: false\n  sunday_slot1_end:\n    name: End Slot 1 - Sunday\n    has_time: true\n    has_date: false\n  sunday_slot2_start:\n    name: Start Slot 2 - Sunday\n    has_time: true\n    has_date: false\n  sunday_slot2_end:\n    name: End Slot 2 - Sunday\n    has_time: true\n    has_date: false\n</code></pre> <pre><code>alias: Manage LED Strip and Thermostat - Time Slots\ndescription: Turn the LED strip and thermostat on or off based on time slots\nmode: single\ntrigger:\n  # Check every minute\n  - platform: time_pattern\n    minutes: \"/1\"\n\ncondition: []\n\naction:\n  - choose:\n      # Monday - Slot 1\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.monday_slot1_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.monday_slot1_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.monday_slot1_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Monday - Slot 2\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.monday_slot2_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.monday_slot2_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.monday_slot2_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Tuesday - Slot 1\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.tuesday_slot1_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.tuesday_slot1_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.tuesday_slot1_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Tuesday - Slot 2\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.tuesday_slot2_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.tuesday_slot2_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.tuesday_slot2_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Wednesday - Slot 1\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.wednesday_slot1_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.wednesday_slot1_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.wednesday_slot1_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Wednesday - Slot 2\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.wednesday_slot2_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.wednesday_slot2_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.wednesday_slot2_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Thursday - Slot 1\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.thursday_slot1_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.thursday_slot1_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.thursday_slot1_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Thursday - Slot 2\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.thursday_slot2_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.thursday_slot2_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.thursday_slot2_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Friday - Slot 1\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.friday_slot1_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.friday_slot1_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.friday_slot1_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Friday - Slot 2\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.friday_slot2_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.friday_slot2_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.friday_slot2_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Saturday - Slot 1\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.saturday_slot1_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.saturday_slot1_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.saturday_slot1_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Saturday - Slot 2\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.saturday_slot2_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.saturday_slot2_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.saturday_slot2_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Sunday - Slot 1\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.sunday_slot1_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.sunday_slot1_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.sunday_slot1_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n      # Sunday - Slot 2\n      - conditions:\n          - condition: state\n            entity_id: input_boolean.sunday_slot2_active\n            state: \"on\"\n          - condition: template\n            value_template: &gt;\n              {{ states('input_datetime.sunday_slot2_start') &lt;= now().strftime('%H:%M') &lt;= states('input_datetime.sunday_slot2_end') }}\n        sequence:\n          - service: light.turn_on\n            target:\n              entity_id: light.salon_wled_2\n          - service: climate.turn_on\n            target:\n              entity_id: climate.thermostat_amelie\n\n    # Default action: Turn off LED and thermostat\n    default:\n      - service: light.turn_off\n        target:\n          entity_id: light.salon_wled_2\n    default:\n      - target:\n          entity_id: light.salon_wled_2\n        action: light.turn_off\n        data: {}\n      - service: climate.set_hvac_mode\n        target:\n          entity_id: climate.thermostat_cuisine\n        data:\n          hvac_mode: \"off\"  # \u00c9teint le thermostat\n</code></pre> <pre><code>square: false\ntype: grid\ncolumns: 1\ncards:\n  - type: markdown\n    content: |\n      ## Time Slot Management\n      Activate and configure two time slots for each day of the week.\n  - square: false\n    type: grid\n    columns: 3\n    cards:\n      - type: entities\n        title: Monday\n        entities:\n          - entity: input_boolean.monday_slot1_active\n            name: Activate Slot 1\n          - entity: input_datetime.monday_slot1_start\n            name: Start Slot 1\n          - entity: input_datetime.monday_slot1_end\n            name: End Slot 1\n          - entity: input_boolean.monday_slot2_active\n            name: Activate Slot 2\n          - entity: input_datetime.monday_slot2_start\n            name: Start Slot 2\n          - entity: input_datetime.monday_slot2_end\n            name: End Slot 2\n      - type: entities\n        title: Tuesday\n        entities:\n          - entity: input_boolean.tuesday_slot1_active\n            name: Activate Slot 1\n          - entity: input_datetime.tuesday_slot1_start\n            name: Start Slot 1\n          - entity: input_datetime.tuesday_slot1_end\n            name: End Slot 1\n          - entity: input_boolean.tuesday_slot2_active\n            name: Activate Slot 2\n          - entity: input_datetime.tuesday_slot2_start\n            name: Start Slot 2\n          - entity: input_datetime.tuesday_slot2_end\n            name: End Slot 2\n      - type: entities\n        title: Wednesday\n        entities:\n          - entity: input_boolean.wednesday_slot1_active\n            name: Activate Slot 1\n          - entity: input_datetime.wednesday_slot1_start\n            name: Start Slot 1\n          - entity: input_datetime.wednesday_slot1_end\n            name: End Slot 1\n          - entity: input_boolean.wednesday_slot2_active\n            name: Activate Slot 2\n          - entity: input_datetime.wednesday_slot2_start\n            name: Start Slot 2\n          - entity: input_datetime.wednesday_slot2_end\n            name: End Slot 2\n      - type: entities\n        title: Thursday\n        entities:\n          - entity: input_boolean.thursday_slot1_active\n            name: Activate Slot 1\n          - entity: input_datetime.thursday_slot1_start\n            name: Start Slot 1\n          - entity: input_datetime.thursday_slot1_end\n            name: End Slot 1\n          - entity: input_boolean.thursday_slot2_active\n            name: Activate Slot 2\n          - entity: input_datetime.thursday_slot2_start\n            name: Start Slot 2\n          - entity: input_datetime.thursday_slot2_end\n            name: End Slot 2\n      - type: entities\n        title: Friday\n        entities:\n          - entity: input_boolean.friday_slot1_active\n            name: Activate Slot 1\n          - entity: input_datetime.friday_slot1_start\n            name: Start Slot 1\n          - entity: input_datetime.friday_slot1_end\n            name: End Slot 1\n          - entity: input_boolean.friday_slot2_active\n            name: Activate Slot 2\n          - entity: input_datetime.friday_slot2_start\n            name: Start Slot 2\n          - entity: input_datetime.friday_slot2_end\n            name: End Slot 2\n      - type: entities\n        title: Saturday\n        entities:\n          - entity: input_boolean.saturday_slot1_active\n            name: Activate Slot 1\n          - entity: input_datetime.saturday_slot1_start\n            name: Start Slot 1\n          - entity: input_datetime.saturday_slot1_end\n            name: End Slot 1\n          - entity: input_boolean.saturday_slot2_active\n            name: Activate Slot 2\n          - entity: input_datetime.saturday_slot2_start\n            name: Start Slot 2\n          - entity: input_datetime.saturday_slot2_end\n            name: End Slot 2\n      - type: entities\n        title: Sunday\n        entities:\n          - entity: input_boolean.sunday_slot1_active\n            name: Activate Slot 1\n          - entity: input_datetime.sunday_slot1_start\n            name: Start Slot 1\n          - entity: input_datetime.sunday_slot1_end\n            name: End Slot 1\n          - entity: input_boolean.sunday_slot2_active\n            name: Activate Slot 2\n          - entity: input_datetime.sunday_slot2_start\n            name: Start Slot 2\n          - entity: input_datetime.sunday_slot2_end\n            name: End Slot 2\ngrid_options:\n  columns: full\n</code></pre>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat/","title":"Thermostat","text":""},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat/#configyaml","title":"config.yaml","text":"<pre><code># Thermostat generic- jmh 31/12/2021\n# https://www.home-assistant.io/integrations/generic_thermostat/\nclimate:\n  - platform: generic_thermostat\n    name: Thermostat lampe\n    heater: switch.lampe_salon\n    target_sensor: sensor.wemos_2_temperature\n    min_temp: 15\n    max_temp: 34\n    target_temp: 28\n\n    # R\u00e9glez l'interrupteur sp\u00e9cifi\u00e9 dans l'option de chauffage\n    # pour qu'il soit trait\u00e9 comme un dispositif de refroidissement\n    # au lieu d'un dispositif de chauffage.\n    ac_mode: false\n\n    cold_tolerance: 0.3\n\n    # D\u00e9finissez une diff\u00e9rence minimale entre la temp\u00e9rature\n    # lue par le capteur sp\u00e9cifi\u00e9 dans l'option target_sensor\n    # et la temp\u00e9rature cible qui doit changer avant d'\u00eatre\n    # \u00e9teinte. Par exemple, si la temp\u00e9rature cible est de\n    # 25 et que la tol\u00e9rance est de 0,5, le chauffage s'arr\u00eatera\n    # lorsque le capteur sera \u00e9gal ou sup\u00e9rieur \u00e0 25,5.\n    hot_tolerance: 0.5\n\n    # D\u00e9finissez un minimum de temps pendant lequel l'interrupteur\n    # sp\u00e9cifi\u00e9 dans l'option chauffage doit \u00eatre dans son \u00e9tat\n    # actuel avant d'\u00eatre \u00e9teint ou allum\u00e9.\n    min_cycle_duration:\n      minutes: 10\n      # D\u00e9finissez un intervalle de maintien en intervalle.\n      # S'il est r\u00e9gl\u00e9, le commutateur sp\u00e9cifi\u00e9 dans l'option de\n      # chauffage sera d\u00e9clench\u00e9 chaque fois que l'intervalle\n      # s'\u00e9coulera. Utilisez-le avec des appareils de chauffage\n      # et des unit\u00e9s de climatisation qui s'\u00e9teignent s'ils\n      # ne re\u00e7oivent pas de signal de leur t\u00e9l\u00e9commande pendant un\n      # certain temps. Utilisez \u00e9galement avec des commutateurs\n      # qui pourraient perdre de l'\u00e9tat. L'appel keep-alive se fait\n      # avec l'\u00e9tat actuel d'int\u00e9gration climatique valide (on ou off).\n      ## keep_alive:\n      ##   minutes: 3\n\n    # Set the initial HVAC mode. Valid values are 'off', 'heat' or 'cool'.\n    # Value has to be double quoted. If this parameter is not set,\n    # it is preferable to set a keep_alive value. This is helpful\n    # to align any discrepancies between generic_thermostat and\n    # heater state.\n    initial_hvac_mode: \"off\"\n\n    # D\u00e9finissez la temp\u00e9rature utilis\u00e9e par preset_mode: away.\n    # Si ce n'est pas sp\u00e9cifi\u00e9, la fonctionnalit\u00e9 de mode pr\u00e9d\u00e9fini\n    # ne sera pas disponible.\n    away_temp: 16\n\n    # The desired precision for this device. Can be used to\n    # match your actual thermostat\u2019s precision.\n    # Supported values are 0.1, 0.5 and 1.0. This value is also\n    # used as the step size for setting the target temperature.\n    # Default: 0.1 for Celsius and 1.0 for Fahrenheit.\n    precision: 0.1\n</code></pre>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat/#schedule","title":"Schedule","text":"<p>https://ledstripsandcode.blogspot.com/2018/11/simple-thermostat-scheduler-in-home.html</p> <p>https://gist.github.com/abmantis/34f1064fbe22c37bdbe79bc296c41a3a#file-ha_thermostat_scheduler-py</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat_ZWT198/","title":"ZWT198 Temperature into HAS via MQTT","text":""},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat_ZWT198/#introduction","title":"Introduction","text":"<p>The ZWT198 thermostat does not directly transmit its temperature to Home Assistant. To access this information, we need to retrieve it through the MQTT protocol. This guide explains how to integrate this data into Home Assistant, enabling us to monitor and utilize our thermostat's temperature within Home Assistant.</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat_ZWT198/#integration-steps","title":"Integration Steps","text":""},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat_ZWT198/#verify-mqtt-messages-with-mqtt-explorer","title":"Verify MQTT Messages with MQTT Explorer","text":"<p>To confirm that the thermostat is publishing temperature data to the MQTT broker, we use MQTT Explorer. Connect to your broker and navigate to the topic corresponding to your thermostat, for example: <code>zigbee2mqtt/Zigbee Thermostat Living Room ZWT198</code>. Ensure that the message contains the key <code>local_temperature</code> with a numeric value.</p> <p> Image of the MQTT Explorer interface displaying the relevant topic and the message containing the <code>local_temperature</code> key.</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat_ZWT198/#add-mqtt-sensor-configuration-in-home-assistant","title":"Add MQTT Sensor Configuration in Home Assistant","text":"<p>To have Home Assistant create a sensor that retrieves the temperature from the MQTT message published by the thermostat, access the <code>configuration.yaml</code> file and add the following configuration:</p> <pre><code>mqtt:\n  sensor:\n    - name: \"Living Room Temperature\"\n      state_topic: \"zigbee2mqtt/Zigbee Thermostat Living Room ZWT198\"\n      unit_of_measurement: \"\u00b0C\"\n      value_template: \"{{ value_json.local_temperature }}\"\n      device_class: temperature\n</code></pre> <p>Save the file and restart Home Assistant to apply the changes.</p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat_ZWT198/#verify-sensor-availability-in-home-assistant","title":"Verify Sensor Availability in Home Assistant","text":"<p>After restarting Home Assistant, go to Developer Tools &gt; States. Search for the sensor named <code>sensor.living_room_temperature</code> and verify that its value matches the current temperature measured by the thermostat.</p> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Heating_and_Thermostats/Thermostat_ZWT198/#integrating-the-temperature-into-a-home-assistant-card","title":"Integrating the Temperature into a Home Assistant Card","text":"<p>To display the temperature on your Home Assistant dashboard, you can add an appropriate card. For instance, to show the current temperature, you might use the Sensor Card:</p> <pre><code>type: sensor\nentity: sensor.living_room_temperature\nname: Living Room Temperature\n</code></pre> <p></p> <p>For a graphical representation of temperature trends, the History Graph Card is suitable:</p> <pre><code>type: history-graph\nentities:\n  - sensor.living_room_temperature\ntitle: Living Room Temperature History\nhours_to_show: 24\nrefresh_interval: 60\n</code></pre> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/DHT22_accuracy/","title":"DHT22 accuracy","text":"<p>Tip</p> <p>If there is only one thing to remember from this page, it is that you have to raise the DHT22 so that the ESP does not heat up.</p> <p></p> <p>To see the accuracy of my DHT22, I compared 5 of them. I coupled them all with ESP01s as you can see below.</p> <p></p> <p>I noticed a great variation of measurement between my 5 DHT22 sensors. On the figure below, we can see that two sensors give the same temperature and the three others very clearly different temperatures. We notice a variation of 10.3\u00b0C between some sensors.</p> <p></p> <p>Looking closely at my esp01s, I realized that I had two different models, or rather two different manufacturers. On three of the ESPs you can clearly read the text \"esp01\" and not on the 2 others as you can see below.</p> <p></p> <p>This difference of manufacturer can explain the distribution of the temperatures, 2 sensors with the same value (23.7\u00b0C), and the three others with much higher temperatures.</p> <p>But this does not explain why I have a variation of more than 10\u00b0C between my sensors. I thought, it might be due to the ESP and maybe depending on the manufacturer, they were heating more or less.</p> <p>Eureka, I found. By measuring the temperature of the ESP we can see that it heats up in a non-negligible way, more than 33\u00b0.</p> <p></p> <p>To avoid that the ESP heats the DHT 22, I twisted the temperature sensor.</p> <p></p> <p>Now the plastic of the DHT22 has the same temperature as the fabric next to it.</p> <p> </p> <p>Now, the five sensors give very close values as you can see below.</p> <p></p> <p>The last thing to do is to calibrate all the sensors. For that, I played on the Offset parameter in the configuration file of the ESPHome.</p> esp01 #1 esp01 #2 esp01 #3 esp01 #4 esp01 #5 Temperature -1.9 -1.8 -1.7 -1.6 -1.7 Humidity -3 +6 0 0 0 <p><pre><code>sensor:\n    - platform: dht\n        model: DHT22_TYPE2\n        pin: GPIO02\n        temperature:\n            name: \"esp01-dht22-01 Temperature\"\n            filters:\n                - offset: -1.9\n        humidity:\n            name: \"esp01-dht22-01 Humidite\"\n            filters:\n                - offset: -3\n        update_interval: 600s\n</code></pre> I have now five calibrated DHT22 sensors</p> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/DHT22_accuracy/#esp32","title":"esp32","text":"<p>The accuracy of the ESP32 processor is not great, there can be an error of more than 3\u00b0C.</p> <p></p> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/DHT22_accuracy/#esp8266","title":"esp8266","text":"<p>ESP32 varies very little, around 0.3\u00b0C</p> <p></p> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/DHT22_accuracy/#esp8266-d1-mini","title":"esp8266-d1-mini","text":"<p>ESP266-d1-mini varies very little, around 0.3\u00b0C</p> <p></p> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/ESP01S-DHT22/","title":"ESP8266 ESP-01S DHT22","text":""},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/ESP01S-DHT22/#add-to-home-assistant-via-esphome","title":"Add to home assistant via ESPHome","text":"<pre><code>esphome:\n  name: esp01-dht22-06\n  comment: entree\n\nesp8266:\n  board: esp01_1m\n\n# to access via web client\nweb_server:\n  port: 80\n\n# Enable logging\nlogger:\n\n# Enable Home Assistant API\napi:\n\nota:\n  password: \"fe5bdec0ad718dcdc24d7cbcb96ee0ae\"\n\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n\n  # Enable fallback hotspot (captive portal) in case wifi connection fails\n  ap:\n    ssid: \"Esp01-Dht22-06 Fallback Hotspot\"\n    password: \"FmsCHnjpuR5g\"\n\ncaptive_portal:\nsensor:\n  - platform: dht\n    # model: DHT22 don't work with the ESP-01S\n    model: AM2302\n    pin: GPIO02\n    temperature:\n      name: \"entree-temperature-DHT22\"\n      filters:\n        - offset: 0.0\n    humidity:\n      name: \"entree-humidite-DHT22\"\n      filters:\n        - offset: 0.0\n    update_interval: 600s\n</code></pre>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/ESP01S-DHT22/#full-code","title":"Full code","text":"<pre><code>substitutions:\n  friendly_name: DHT22-Cuisine  # A user-friendly name for the device and sensors\n\nesphome:\n  name: esp01-dht22-03             # Unique identifier for the device\n  # friendly_name: \"$friendly_name\"  # removed because name is to long : sensor.esp01_dht22_03_dht22_cuisine_temperature_dht22\n  comment: \"DHT22 Cuisine\"          # Description of the device's location or purpose\n\nesp8266:\n  board: esp01_1m                  # Specifies the ESP8266 board type (ESP01 with 1MB flash memory)\n\nweb_server:\n  port: 80                         # Enables a web server for device monitoring on port 80\n\n# Enable logging for debugging and monitoring\nlogger:\n\n# Enable Home Assistant API to allow communication with Home Assistant\napi:\n\n# Enable Over-The-Air (OTA) updates\nota:\n  - platform: esphome\n    password: \"239393caf760cc3701647ab7f66e5041\"  # Password for OTA updates to secure the device\n\nwifi:\n  ssid: !secret wifi_ssid           # Wi-Fi network name stored securely in secrets\n  password: !secret wifi_password   # Wi-Fi password stored securely in secrets\n\n  # Configuration for fallback hotspot if the device fails to connect to Wi-Fi\n  ap:\n    ssid: \"Esp01-Dht22-03 Fallback Hotspot\"  # Name of the fallback network\n    password: \"Y6OoAFtSy4uD\"                 # Password for the fallback network\n\ncaptive_portal:                     # Enables a captive portal for reconfiguration when needed\n\nsensor:\n  # Configuration for the DHT22 (AM2302) temperature and humidity sensor\n  - platform: dht\n    # Note: The DHT22 model is referred to as AM2302 when used with ESP-01S.\n    model: AM2302  # Specifies the sensor model\n    pin: GPIO02    # GPIO pin to which the sensor is connected\n    temperature:\n      name: \"${friendly_name} temperature\"  # Sensor name for temperature readings\n      id: temperature_sensor   # Adds an ID for reference in the template\n      filters:\n        - offset: -1.7  # Calibration offset for temperature\n    humidity:\n      name: \"${friendly_name} humidite\"  # Sensor name for humidity readings\n      id: humidity_sensor  # Adds an ID for reference in the template\n      filters:\n        - offset: 0.0  # Calibration offset for humidity\n    update_interval: 600s  # Time interval (600 seconds) for sensor readings\n\n  # Sensor for Wi-Fi signal strength (RSSI) in dB\n  - platform: wifi_signal\n    name: \"${friendly_name} WiFi Signal dB\"  # Sensor name for Wi-Fi signal in dB\n    id: wifi_signal_db  # Unique ID for this sensor\n    update_interval: 60s  # Updates every 60 seconds\n    entity_category: \"diagnostic\"  # Marked as diagnostic in Home Assistant\n\n  # Sensor for Wi-Fi signal strength as a percentage\n  - platform: copy\n    source_id: \"wifi_signal_db\"  # Uses data from the Wi-Fi signal sensor\n    name: \"${friendly_name} WiFi Signal Percent\"  # Name of the percentage sensor\n    filters:\n      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);  # Formula to calculate percentage from dB\n    unit_of_measurement: \"Signal %\"  # Measurement unit displayed as percentage\n    entity_category: \"diagnostic\"   # Marked as diagnostic\n    device_class: \"\"                # No specific device class\n\n  # Uptime sensor to monitor how long the device has been running\n  - platform: uptime\n    name: \"${friendly_name} Uptime\"  # Name of the uptime sensor\n\n  # Heat Index Calculation Using Temperature and Humidity\n  - platform: template\n    name: \"${friendly_name} Heat Index\"  # Name for the calculated heat index\n    unit_of_measurement: \"\u00b0C\"  # Unit of measurement for the heat index\n    lambda: |-\n      if (!isnan(id(temperature_sensor).state) &amp;&amp; !isnan(id(humidity_sensor).state)) {\n        float T = id(temperature_sensor).state;  // Current temperature\n        float H = id(humidity_sensor).state;    // Current humidity\n        // Formula to calculate the heat index\n        return -8.78469475556 + 1.61139411 * T + 2.33854883889 * H\n               - 0.14611605 * T * H\n               - 0.012308094 * pow(T, 2)\n               - 0.0164248277778 * pow(H, 2)\n               + 0.002211732 * pow(T, 2) * H\n               + 0.00072546 * T * pow(H, 2)\n               - 0.000003582 * pow(T, 2) * pow(H, 2);\n      } else {\n        return NAN;  // Return NAN if data is invalid\n      }\n\ntext_sensor:\n  # Sensor for the ESPHome version running on the device\n  - platform: version\n    name: \"${friendly_name} ESPHome Version\"  # Name of the version sensor\n\n  # Sensor for the Wi-Fi SSID the device is connected to\n  - platform: wifi_info\n    ssid:\n      name: \"${friendly_name} WiFi\"  # Name of the Wi-Fi SSID sensor\n</code></pre> <p>Use ESPHome-flasher to flash ESP01S entity</p> <p></p>"},{"location":"Home-Assistant/Environmental%20and%20Climate%20Monitoring/Temperature_and_Humidity/ESP01S-DHT22/#test-the-device","title":"Test the device","text":"<p>UNPLUG it!!!</p> <p>Try http://esp01-dht22-06.local</p> <p></p> <p>Inside Home assistant :</p> <p> </p> <p></p> <p>Finish the installation in Home Assistant</p> <p> </p> <p></p>"},{"location":"Home-Assistant/Security_and_Cameras/Cameras/ESP32-CAM/","title":"ESP32-CAM Installation","text":"<p>Edit the code : <pre><code>substitutions:\n  friendly_name: C10 # For Camera 10\n\nesphome:\n  name: esp32-cam-10\n  friendly_name: \"$friendly_name\"\n  comment: \"Cha\u00eene hifi [86]\"\n\nesp32:\n  board: esp32dev\n  framework:\n    type: arduino\n\n# Enable logging\nlogger:\n\nweb_server:\n  port: 80\n\n# Enable Home Assistant API\napi:\n  encryption:\n    key: \"mHC1rZ/+/u---------KjERLis7Yw+Jz7CsP+II=\"\n\nota:\n  - platform: esphome\n    password: \"dfdb90983--------3860b94f3\"\n\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n\n  # Enable fallback hotspot (captive portal) in case wifi connection fails\n  ap:\n    ssid: \"Esp32-Cam-10 Fallback Hotspot\"\n    password: \"k3c3uU9cotdz\"\n\ncaptive_portal:\n\n\n# Configuration for Ai-Thinker Camera\n# https://esphome.io/components/esp32_camera.html#configuration-for-ai-thinker-camera\nesp32_camera:\n  name: \"$friendly_name\"\n  external_clock:\n    pin: GPIO0\n    frequency: 20MHz\n  i2c_pins:\n    sda: GPIO26\n    scl: GPIO27\n  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]\n  vsync_pin: GPIO25\n  href_pin: GPIO23\n  pixel_clock_pin: GPIO22\n  power_down_pin: GPIO32\n  # Image settings\n  max_framerate: 10 fps    # default: 10 fps, max 60\n  idle_framerate: 0.1 fps # default: 0.1 fps - framerate for 'picture' in HA dashboard\n  resolution: 1024x768     # default: 640x480 (VGA) - higher res requires more memory\n  jpeg_quality: 10        # 10 (best) to 63 (worst)\n  vertical_flip: False\n  horizontal_mirror: False\n  contrast: 0 # default: 0, variable -2 to 2\n  brightness: 2 # default: 0, variable -2 to 2\n  saturation: 0 # default: 0, variable -2 to 2\n\n# Server video/pictures, https://esphome.io/components/esp32_camera_web_server.html\nesp32_camera_web_server:\n  - port: 8080\n    mode: stream\n  - port: 8081\n    mode: snapshot\n\ntime:\n  - platform: homeassistant\n    id: homeassistant_time\n\nswitch:\n  - platform: gpio\n    name: \"$friendly_name Flash\"\n    pin: 4\n    #inverted: True\n  - platform: restart\n    name: \"$friendly_name Restart\"\n    id: restart_switch\n\n# Example configuration entry with 2 sensors and filter\nsensor:\n  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB\n    name: \"$friendly_name WiFi Signal dB\"\n    id: wifi_signal_db\n    update_interval: 60s\n    entity_category: \"diagnostic\"\n\n  - platform: copy # Reports the WiFi signal strength in %\n    source_id: \"wifi_signal_db\"\n    name: $friendly_name WiFi Signal Percent\n    filters:\n      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);\n    unit_of_measurement: \"Signal %\"\n    entity_category: \"diagnostic\"\n    device_class: \"\"\n\n  - platform: uptime\n    name: \"$friendly_name Uptime\"\n\ntext_sensor:\n  - platform: version\n    name: \"$friendly_name ESPHome Version\"\n  - platform: wifi_info\n    ssid:\n      name: \"$friendly_name WiFi\"\n</code></pre> Select Manual download</p> <p></p> <p></p> <p></p> <p>Warning</p> <p>If the ESP is not visible on the serial port, it may be due to the cable, you must try another one</p> <p></p> <p>Warning</p> <p>If an error appears, it means that the ESP is not in \"write\" mode. You must then press the \"IO0\" button THEN connect the ESP and flash it.</p> <p></p> <p></p> <p>Disconnect then reconnect the ESP</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/","title":"ESP01 D1 mini Motion sensor + photoresistor + grid of led +","text":""},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#flash-the-esp-d1-mini-to-install-tasmota","title":"Flash the esp-D1-mini to install Tasmota","text":"<p>Flash Tasmota using a Chrome based browser for ESP82XX and ESP32</p> <ul> <li>https://tasmota.github.io/docs/Getting-Started/#needed-software)</li> <li>https://tasmota.github.io/install/</li> </ul> <p> </p>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#gpio-on-a-esp-d1-mini","title":"GPIO on a ESP-D1-mini","text":""},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#configuration-of-mqtt","title":"Configuration of MQTT","text":"<p>Info</p> <p>To find the MQTT settings, you can go to the MQTT configure on Homeassitant</p> <p> </p> <p> </p> <p>Change : Host, User, Passwd and topic parameters.</p> <p> </p> <p>A new entity is automatically added to the MQTT list of entities already found (+1 in the number of entities)</p> <p></p> <p></p>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#add-the-led-grid-ws2812","title":"Add the LED grid - WS2812","text":"<p>See: tasmota.github.io/docs/Lights/</p> <p> </p> <p> </p>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#add-a-single-led","title":"Add a single led","text":""},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#add-the-photoresistor","title":"Add the Photoresistor","text":"<p>See: tasmota.github.io/docs/ADC/</p> <p> </p> <p>The change in the photoresistor value is unfortunately not sent automatically with each change. You must therefore define a rule directly in Tasmota. See : PIR-Motion-Sensors documentation</p> <pre><code>SwitchMode1 1\nSwitchTopic 0\nRule1\n  ON analog#a0&gt;%var1% DO\n    Backlog var1 %value%;\n            publish stat/%topic%/photoresistor %value%;\n            var2 %value%;\n            add1 10;\n            sub2 10;\n  ENDON\n\n  ON analog#a0&lt;%var2% DO\n    Backlog var2 %value%;\n            publish stat/%topic%/photoresistor %value%;\n            var1 %value%;\n            add1 10;\n            sub2 10;\n  ENDON\nRule1 1\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#motion-sensor-pir-hcs-sr505","title":"Motion sensor (PIR HCS-SR505)","text":"<p>See :https://tasmota.github.io/docs/PIR-Motion-Sensors/#tasmota-settings</p> <p> </p> <p><pre><code>SwitchMode1 1\nSwitchTopic 0\nRule2 on Switch1#state=1 do publish stat/%topic%/PIR1 ON endon on Switch1#state=0 do Publish stat/%topic%/PIR1 OFF endon\nRule2 1\nRestart 1\n</code></pre> See tasmota.github.io/docs/Home-Assistant/</p> configuration.yaml<pre><code>mqtt:\n  binary_sensor:\n      - unique_id: \"20240119_1746\"\n        state_topic: \"stat/tasmota_escalier_2F9DA0/PIR1\"\n        name: \"Escalier PIR\"\n        device_class: motion\n        availability_topic: \"tele/tasmota_escalier_2F9DA0/LWT\"\n        qos: 1\n        payload_on: \"ON\"\n        payload_off: \"OFF\"\n        payload_available: \"Online\"\n        payload_not_available: \"Offline\"\n</code></pre> <p>Info</p> <p>To find the topic name, go to the console and select the wring name</p> <p></p> <p></p> <p></p>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#temperature-sensor-dht22","title":"Temperature sensor - DHT22","text":"<p>Warning</p> <p>Don't select DHT11 but use AM2301</p> <p> </p> <p></p>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#graph-with-customapexcharts-card-and-type-custommini-graph-card","title":"Graph with custom:apexcharts-card and type: custom:mini-graph-card","text":""},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#graph-with-motion-sensor-true-green-led-grid-on-orange-luminosity-grey","title":"Graph with : motion sensor TRUE (green), led grid ON (orange) + luminosity (grey)","text":"<pre><code>type: custom:apexcharts-card\nupdate_interval: 10min\nheader:\n  show: true\n  title: \u00c9clairage escalier\n  show_states: false\n  colorize_states: true\ngraph_span: 24h\nspan:\n  end: day\napex_config:\n  legend:\n    show: false\n  chart:\n    height: 260\nnow:\n  show: true\n  color: grey\n  label: Now\nseries:\n  - entity: sensor.escalier_photoresistor\n    group_by:\n      func: avg\n      duration: 10min\n    type: area\n    opacity: 0.3\n    stroke_width: 1\n    color: rgb(200, 200, 200)\n    extend_to: now\n    transform: return x / 10.24\n  - entity: binary_sensor.escalier_pir\n    color: green\n    type: column\n    stroke_width: 3\n    opacity: 0.1\n    transform: 'return x === ''on'' ? 72 : 0;'\n  - entity: light.esp_tasmota_escalier_tasmota2\n    type: column\n    color: orange\n    transform: 'return x === ''off'' ? 75 : 0;'\n    stroke_width: 1.5\nyaxis:\n  - min: 70\n    max: 100\n    show: false\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#show-values-of-luminosity-0-1024-temperature-and-motion-sensor","title":"Show values of luminosity (0 - 1024), Temperature and motion sensor","text":"<pre><code>type: horizontal-stack\ncards:\n  - type: custom:mini-graph-card\n    name: Luminosit\u00e9\n    entities:\n      - sensor.escalier_photoresistor\n    line_color: blue\n    line_width: 8\n    font_size: 75\n  - type: custom:mini-graph-card\n    name: \u00b0C\n    entities:\n      - sensor.esp_tasmota_escalier_am2301_temperature\n    line_color: '#e74c3c'\n    line_width: 8\n    font_size: 75\n  - type: custom:mini-graph-card\n    name: PIR\n    entities:\n      - sensor.escalier_pir_x_100\n    line_color: var(--accent-color)\n    line_width: 8\n    font_size: 75\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#automation","title":"Automation","text":"<p>Turns ON the LED grid if movement is detected and there is not enough light</p> <p></p> <p>Turns OFF the LED grid if the \"detected\" state changes to \"not detected\"</p> <p></p>"},{"location":"Home-Assistant/Security_and_Cameras/Light_and_Motion_Sensors/ESP01-D1-Mini_PIR_Leds_Photoresistance/#pcb-cnc","title":"PCB - CNC","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_ESPCam_detection_-_SMS/","title":"Motion detection and sending a snapshot from an ESPcam","text":"<p>Create the automation: (see https://www.youtube.com/watch?v=6jkzy2Cv9Pk) <pre><code>alias: \"ALERTE : motion detection - cha\u00eene Hifi -&gt; SMS\"\ndescription: \"\"\ntrigger:\n  - type: occupied\n    platform: device\n    device_id: 49a8895fa0bc2c1106a685725bf46d5e\n    entity_id: binary_sensor.zigbee_pir_3_occupancy\n    domain: binary_sensor\ncondition: []\naction:\n  - service: camera.snapshot\n    target:\n      device_id: camera.esp32_cam_7\n    data:\n      filename: /config/www/tmp/snapshot-salon.jpg\n  - service: notify.mobile_app_iphone_xi_papge\n    data:\n      message: \"Il y a quelqu'un dans le salon (PIR #3)\"\n      data:\n        image: https://homeassistant.papge.fr/local/tmp/snapshot-salon.jpg\n        entity_id: camera.esp32_cam_7\n        actions:\n          - action: URI\n            title: Ouvrir Cameras\n            uri: https://homeassistant.papge.fr/dashboard-cameras\nmode: single\n</code></pre></p>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/","title":"PIR + Light sensor to light up a LED","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#esphome-pir-and-light-sensor-to-light-up-a-led-ribbon-plugged-into-a-tasmota-smart-plug","title":"ESPHome PIR and Light sensor to light up a LED ribbon plugged into a Tasmota Smart Plug","text":"<p>See Instructables pages as an example</p>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#material","title":"Material","text":"<ul> <li>ESP8266 D1 mini</li> <li>PIR sensor HC-SR501</li> <li>resistance 10k</li> <li>photoresistor</li> <li>relay SRD-05VDC-SL-C</li> </ul>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#esp8266","title":"ESP8266","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#pir-sensor-hc-sr501","title":"PIR sensor HC-SR501","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#time-delay-adjustment","title":"Time Delay Adjustment","text":"<p>Delay is (from left to right) 10s, 1000s (1'30'') and 2100s (3'30'')</p>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#relay-srd-05vdc-sl-c","title":"relay SRD-05VDC-SL-C","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#wire-to-use-a-tasmota-plug-bad-solution-tasmota-plug-is-dead-after-several-months-see-below","title":"Wire to use a Tasmota Plug (bad solution, Tasmota plug is dead after several months! - see below)","text":"<p>Warning</p> <p>Be careful to put the led ribbon in the right direction. The current only flows in one direction.</p> <p>Danger</p> <p>After several months the Tasmota plug died (another too). So I decided to put a relay instead of the plug.</p>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#wire-with-a-relay","title":"Wire with a relay","text":"<p>The wire of the photoresistor and the presence detector is the same in the first version.</p> <p> </p> <p> </p>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#esphome-configuration","title":"ESPHome configuration","text":"<pre><code>esphome:\n    name: esp8266-d1-mini-3\n    comment: 'PIR entr\u00e9e'\n\nesp8266:\n    board: esp01_1m\n\nweb_server:\n    port: 80\n\n# Enable logging\nlogger:\n\n# Enable Home Assistant API\napi:\n\nota:\n    password: \"----------------------\"\n\nwifi:\n    ssid: !secret wifi_ssid\n    password: !secret wifi_password\n\n    # Enable fallback hotspot (captive portal) in case wifi connection fails\n    ap:\n        ssid: \"Esp8266-D1-Mini-3\"\n        password: \"Q1iAmSDiMXdt\"\n\ncaptive_portal:\nsensor:\n    - platform: adc\n      pin: A0\n      name: \"Entr\u00e9e LUX\"\n      update_interval: '5s'\n      unit_of_measurement: lux\n      filters:\n          - lambda: |-\n          return (x / 10000.0) * 2000000.0;\n\nbinary_sensor:\n    - platform: gpio\n      pin: GPIO2\n      name: \"Entr\u00e9e PIR\"\n      device_class: motion\n\nswitch:\n    - platform: gpio\n      pin: GPIO4  # D2\n      name: \"Relais led\"\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#automations","title":"Automations","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#turn-on-when-motion-is-detected","title":"Turn ON when motion is detected","text":"<pre><code>alias: Ext\u00e9rieur PIR d\u00e9tection -&gt; ON\ndescription: \"\"\ntrigger:\n    - platform: state\n      entity_id:\n          - binary_sensor.entree_pir\n      to: \"on\"\n      for:\n          hours: 0\n          minutes: 0\n          seconds: 0\ncondition:\n    - condition: numeric_state\n      entity_id: sensor.lux_sensor\n      below: 100\naction:\n    - type: turn_on\n      device_id: 06fe698bfc80ec28f1d76a6c2d55dd5a\n      entity_id: bfeec1684104b5ba17dff785b2b33d11\n      domain: switch\nmode: single\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#turn-off-when-motion-is-not-detected","title":"Turn OFF when motion is not detected","text":"<pre><code>alias: Ext\u00e9rieur PIR non d\u00e9tect\u00e9 -&gt; OFF\ndescription: \"\"\ntrigger:\n    - platform: state\n      entity_id:\n          - binary_sensor.entree_pir\n      to: \"off\"\ncondition: []\naction:\n    - type: turn_off\n      device_id: 06fe698bfc80ec28f1d76a6c2d55dd5a\n      entity_id: bfeec1684104b5ba17dff785b2b33d11\n      domain: switch\nmode: single\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_and_Light_Sensor/#chart-to-see-whats-going-on","title":"Chart to see what's going on","text":"<p>In this chart, I use three series</p> <ul> <li>lumonosity</li> <li>is motion detection (orange column)</li> <li>is switch (Tasmota) is on (blue column)</li> </ul> <p>Motion detection and switch are binary sensor, they can't be draw in the chart. To display them, the trick is to create two entities with values 0 or 100 for the detection and 0 or 50 for the switch.</p> <p>Warning</p> <p>To avoid displaying 'off' values for both binary sensors, I set the value to 'null' (not '0')</p> <p>This entities are created in the configuration.yaml file as folloxs :</p> configuration.yaml code<pre><code>sensor:\n    - platform: template\n      sensors:\n          entree_pir_x_100:\n              unique_id : \"20230314-pir-entree\"\n              friendly_name: \"D\u00e9tecteur de pr\u00e9sence de l'entr\u00e9e * 100\"\n              value_template: &gt;-\n          {% if is_state('binary_sensor.entree_pir', 'on') %}\n            100\n          {% else %}\n            null\n          {% endif %}\n  - platform: template\n    sensors:\n        entree_tasmota_switch_x_50:\n            unique_id : \"20230314-tasmota-entree\"\n            friendly_name: \"Prise tasmota de l'entr\u00e9e * 50\"\n            value_template: &gt;-\n          {% if is_state('switch.entree_exterieur_tasmota', 'on') %}\n            50\n          {% else %}\n            null\n          {% endif %}\n</code></pre> Lovelace code<pre><code>type: custom:apexcharts-card\nheader:\n    show: true\n    title: \u00c9clairage porte d'entr\u00e9e\n    show_states: true\n    colorize_states: true\ngraph_span: 24h\nspan:\n    end: day\napex_config:\n    legend:\n        show: false\nnow:\n    show: true\n    color: grey\n    label: Now\nseries:\n    - entity: sensor.entree_pir_x_100\n      type: column\n      stroke_width: 2\n  - entity: sensor.entree_tasmota_switch_x_50\n    type: column\n    stroke_width: 3\n  - entity: sensor.lux_sensor\n    group_by:\n        func: avg\n        duration: 10min\n    stroke_width: 2\n    extend_to: now\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/","title":"Creating a Motion Detection Graph with PIR","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/#introduction","title":"Introduction","text":"<p>This guide explains how to create a motion detection graph using ApexCharts Card in Home Assistant. The graph will visually display motion detected by your PIR sensor, with bars that change color based on the detection state.</p> <p>To proceed, you must have the ApexCharts Card installed via HACS and a functional PIR sensor integrated into Home Assistant.</p> <p>The configuration will use: - <code>type: custom:apexcharts-card</code> for the graph. - Grouping detections into 10-minute intervals. - Color-coded bars: red for motion detected, green for no motion.</p>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/#adding-the-graph","title":"Adding the Graph","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/#access-your-dashboard","title":"Access Your Dashboard:","text":"<ol> <li>Navigate to your Home Assistant dashboard.</li> <li>Click the three dots at the top-right \u2192 Edit Dashboard \u2192    Add Card \u2192 Manual.</li> </ol>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/#add-this-yaml-configuration","title":"Add This YAML Configuration:","text":"<pre><code>type: custom:apexcharts-card\nexperimental:\n  color_threshold: true\ngraph_span: 6h\nheader:\n  title: D\u00e9tection PIR - Salle \u00e0 Manger\n  show: true\nseries:\n  - entity: binary_sensor.salle_a_manger_boule_esp8266_02_pir_sensor\n    type: column\n    name: D\u00e9tections\n    group_by:\n      func: max\n      duration: 10min\n    transform: \"return x === \\\"on\\\" ? 1 : 0.02;\"\n    color_threshold:\n      - value: 0.1\n        color: green\n      - value: 0.9\n        color: orange\napex_config:\n  chart:\n    type: bar\n  plotOptions:\n    bar:\n      columnWidth: 90%\n  xaxis:\n    type: datetime\n    labels:\n      show: true\n      format: HH:mm\n  yaxis:\n    show: false\n  grid:\n    show: false\n  tooltip:\n    enabled: true\n    x:\n      format: HH:mm\n</code></pre>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/#expected-result","title":"Expected Result","text":"<p>Once configured, your graph will look like this:</p> <p></p> <ul> <li>Red bars indicate motion detected.</li> <li>Green bars indicate no motion.</li> <li>Data is grouped into 10-minute intervals for clarity.</li> <li>Time is displayed on the X-axis.</li> </ul>"},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/#customization-and-troubleshooting","title":"Customization and Troubleshooting","text":""},{"location":"Home-Assistant/Security_and_Cameras/Motion_Detection/PIR_easy_graph/#customizing-colors-or-grouping-intervals","title":"Customizing Colors or Grouping Intervals:","text":"<ul> <li>To change bar colors, modify the <code>color_threshold</code> values in the   YAML.</li> <li>To adjust grouping, change <code>duration: 10min</code> to a different value   (e.g., <code>5min</code> or <code>30min</code>).</li> </ul>"},{"location":"Home-Assistant/User_Interface_and_Notification/Lovelace_UI/Lovelace-alignement/","title":"Lovelace alignement with \"lovelace-layout-card\"","text":"<p>See lovelace-layout-card documentation</p>"},{"location":"Home-Assistant/User_Interface_and_Notification/Lovelace_UI/Lovelace-alignement/#two-entities-with-width","title":"Two entities with % width","text":""},{"location":"Home-Assistant/User_Interface_and_Notification/Lovelace_UI/Lovelace-alignement/#insert-new-card-layout-card","title":"Insert new card \"Layout Card\"","text":"<p>Layout options (layout-card)<pre><code>grid-template-columns: 30% auto\n</code></pre> Editor code<pre><code>type: custom:layout-card\nlayout_type: custom:grid-layout\nlayout:\n    grid-template-columns: 30% auto\ncards:\n  - type: markdown\n    content: 'The **Markdown** card allows you to write any text. '\n  - type: markdown\n    content: &gt;\n      The **Markdown** card allows you to write any text. You can style it\n      **bold**, *italicized*, ~strikethrough~ etc. You can do images, links, and\n      more.\n</code></pre></p>"},{"location":"Home-Assistant/User_Interface_and_Notification/Lovelace_UI/Lovelace-alignement/#three-entities-with-width","title":"Three entities with % width","text":"Layout options (layout-card)<pre><code>grid-template-columns: 40% auto\ngrid-template-areas: /\n    \"zonel zoneV\"\n    \"zone2 zoneV\"\n</code></pre> Editor code<pre><code>type: custom:layout-card\nlayout_type: custom:grid-layout\nlayout:\n  grid-template-columns: 40% auto\n  grid-template-areas: / \"zone1 zoneV\" \"zone2 zoneV\"\ncards:\n  - type: entity\n    entity: sensor.bureau_dht22_temperature\n    view_layout:\n       grid-area: zone1\n  - type: entity\n    entity: sensor.bureau_dht22_temperature\n    view_layout:\n        grid-area: zoneV\n  - type: entity\n    entity: sensor.bureau_dht22_temperature\n    view_layout:\n        grid-area: zone2\n</code></pre>"},{"location":"Home-Assistant/User_Interface_and_Notification/Lovelace_UI/Lovelace-alignement/#fixed-height","title":"Fixed height","text":"Layout options (layout-card)<pre><code>grid-template-columns: 30% auto\ngrid-template-rows: auto 200px\ngrid-template-areas: |\n  \"zone1 zoneV\"\n  \"zone2 zoneV\"\n</code></pre>"},{"location":"Home-Assistant/User_Interface_and_Notification/Lovelace_UI/Lovelace-alignement/#width-100-of-the-window","title":"Width 100% of the window","text":"<ul> <li>Go to your lovelace views and select \"Edit Dashboard\"</li> <li>Click the pencil symbol next to the view name to open up the view properties</li> <li>Select \"Side bar\" from the \"View type\" dropdown list</li> <li>Click \"Save\"</li> </ul>"},{"location":"Home-Assistant/User_Interface_and_Notification/Notifications_and_Alerts/Change_status_of_a_set_of_notification/","title":"How to set ON/OFF a group of notifications","text":"<p>Add the following commands to \"config.yaml\" <pre><code># By kangapi - switch ON/OFF a set of automation\ngroup:\n  vacation:\n    unique_id: \"20240815_1822\"\n    name: \"Vacation Group\"\n    entities:\n      - automation.alerte_motion_detection_salon_sms\n      - automation.zigbee_detection_escalier\n      - automation.pir_1_sms_dehors\n      - automation.pir_2_detect_sms\n      - automation.pir_3_detect_sms\n      - automation.alerte_porte_de_garage_fermee_ouverte_sms\n      - automation.alerte_porte_de_garage_ouverte_fermee_sms\n</code></pre></p>"},{"location":"Home-Assistant/Zother/DFPlayer/DFPlayer/","title":"DFPlayer Installation - ESP D1 Mini","text":""},{"location":"Home-Assistant/Zother/DFPlayer/DFPlayer/#audio-files","title":"Audio Files","text":""},{"location":"Home-Assistant/Zother/DFPlayer/DFPlayer/#file-format","title":"File Format:","text":"<p>The DFPlayer only reads audio files in MP3 or WAV format. The files must be correctly named to be recognized (for example, 0001.mp3, 0002.mp3, etc.). The files must also be stored in the root of the SD card or in folders, but playback may be less reliable in subfolders.</p>"},{"location":"Home-Assistant/Zother/DFPlayer/DFPlayer/#sd-card-limits","title":"SD Card Limits:","text":"<p>The DFPlayer Mini supports microSD cards up to 32 GB, formatted in FAT16 or FAT32. It can manage up to 100 folders and 255 files per folder.</p>"},{"location":"Home-Assistant/Zother/DFPlayer/DFPlayer/#file-startup-time","title":"File Startup Time:","text":"<p>MP3 files may take some time to start (a few hundred milliseconds), while WAV files start almost instantly. This can affect the user experience if a quick response is necessary.</p> <p>References:</p> <ol> <li> <p>Forum Arduino: Probl\u00e8me DFPlayer Mini</p> </li> <li> <p>PICAXE Documentation</p> </li> <li> <p>DFPlayer Mini Cheat Sheet</p> </li> <li> <p>Wiki D\u00e9brouillard: DFPlayer Lecteur MP3</p> </li> <li> <p>DFRobot Blog</p> </li> <li> <p>AZ Delivery: MP3 Player Module</p> </li> <li> <p>TunePat: Download YouTube Music to SD</p> </li> </ol>"},{"location":"Home-Assistant/Zother/DFPlayer/DFPlayer/#configuration","title":"Configuration","text":"<pre><code>substitutions:\n  friendly_name: Sound\n\nesphome:\n  name: esp8266-d1-mini-205\n  friendly_name: $friendly_name\n  comment: 'Sound'\n\n  on_boot:\n      then:\n        - dfplayer.set_volume: 15\n\nesp8266:\n  board: esp01_1m\n\n# Enable web access\nweb_server:\n  port: 80\n\n# Enable logging\nlogger:\n\n# WiFi sensors\nsensor:\n  # Sensor to measure the WiFi signal strength\n  - platform: wifi_signal\n    name: \"Signal WiFi\"\n    update_interval: 60s\n    filters:\n      - lambda: return x * 2; # Converts from dBm to approximate percentage\n\n  # Sensor to measure the uptime of the device\n  - platform: uptime\n    name: \"Uptime\"\n\n# Text sensors for network information\ntext_sensor:\n  # Sensor to display the device's IP address\n  - platform: wifi_info\n    ip_address:\n      name: \"IPAddress\"\n\n  # Sensor to display the SSID of the connected WiFi network\n    ssid:\n      name: \"WiFi SSID\"\n\n  # Sensor to display the BSSID of the connected WiFi network\n    bssid:\n      name: \"WiFi BSSID\"\n\n# System status sensor to indicate if the device is online or offline\nbinary_sensor:\n  - platform: status\n    name: \"System Status\"\n\n# UART configuration for communication with DFPlayer\nuart:\n  rx_pin: GPIO13  # RX pin - D5\n  tx_pin: GPIO14  # TX pin - D7\n  baud_rate: 9600  # Recommended baud rate for DFPlayer\n\n# DFPlayer configuration for audio playback functionality\ndfplayer:\n  id: lecteur_musique\n  on_finished_playback:\n    then:\n      - logger.log: \"Playback finished!\" # Log message when playback finishes\n\n# Volume control for DFPlayer using a number input\nnumber:\n  # Template number for controlling the volume of DFPlayer\n  - platform: template\n    name: \"DFPlayer Volume\"\n    id: dfplayer_volume\n    min_value: 0          # Minimum volume level\n    max_value: 30         # Maximum volume level\n    step: 1               # Step size for volume adjustment\n    initial_value: 15     # Initial volume level when booting up\n    optimistic: true       # Indicates that changes will be applied immediately without confirmation\n    set_action:\n      - dfplayer.set_volume:\n          volume: !lambda \"return x;\" # Set the volume based on user input\n\n# Enable Home Assistant API for integration with Home Assistant services\napi:\n  encryption:\n    key: \"XZap0RIQyPB3uwdZXxQRVnhjM9SfB9Ky5yLOVVXObnQ=\"\n\n  actions:\n    # Action to play the next track on DFPlayer\n    - action: dfplayer_next\n      then:\n        - dfplayer.play_next:\n\n    # Action to play the previous track on DFPlayer\n    - action: dfplayer_previous\n      then:\n        - dfplayer.play_previous:\n\n    # Action to play a specific track based on file number input\n    - action: dfplayer_play\n      variables:\n        file: int                # Variable to hold the track number\n      then:\n        - dfplayer.play: !lambda 'return file;'\n\n# Button configuration for user interactions with DFPlayer and system controls\nbutton:\n  # Button to restart the device\n  - platform: restart\n    name: \"Restart\"\n\n  # Button to start playing the first track on DFPlayer\n  - platform: template\n    name: \"Play\"\n    on_press:\n      - dfplayer.play: 1  # Start playing the first track\n\n  # Button to pause playback on DFPlayer\n  - platform: template\n    name: \"Pause\"\n    on_press:\n      - dfplayer.pause\n\n  # Button to play the next track on DFPlayer\n  - platform: template\n    name: \"Next\"\n    on_press:\n      - dfplayer.play_next\n\n  # Button to play the previous track on DFPlayer\n  - platform: template\n    name: \"Previous\"\n    on_press:\n      - dfplayer.play_previous\n\n  # Button to increase the volume of DFPlayer\n  - platform: template\n    name: \"Volume Up\"\n    on_press:\n      - number.increment: dfplayer_volume\n\n  # Button to decrease the volume of DFPlayer\n  - platform: template\n    name: \"Volume Down\"\n    on_press:\n      - number.decrement: dfplayer_volume\n\n# OTA (Over-the-Air) update configuration\nota:\n  - platform: esphome\n    password: \"103356932a9be5ea3641f7e064907750\"\n\nwifi:\n  ssid: !secret wifi_ssid           # WiFi SSID from secrets.yaml file\n  password: !secret wifi_password     # WiFi password from secrets.yaml file\n\n# Enable fallback hotspot (captive portal) in case wifi connection fails\n  # Enable fallback hotspot (captive portal) in case wifi connection fails\n  ap:\n    ssid: \"Esp8266-D1-Mini-205\"\n    password: \"vrjnYjHgHhA4\"\n\ncaptive_portal:\n</code></pre>"},{"location":"Home-Assistant/Zother/MySensors/Libraries/","title":"DHT22 Libraries","text":"<p>zip: DHT.zip</p> <p>Arduino file: DHT22.ino</p>"},{"location":"Home-Assistant/Zother/MySensors/MySensor/","title":"MySensors integration","text":"<p>https://www.home-assistant.io/integrations/mysensors/</p>"},{"location":"Home-Assistant/Zother/MySensors/MySensor/#resources","title":"Resources","text":"<p>https://forum.jeedom.com/viewtopic.php?t=5381</p> <p>https://opendomotech.com/mysensors-gateway-wifi-jeedom-domoticz/</p> <p>Log parser: https://www.mysensors.org/build/parser</p>"},{"location":"Home-Assistant/Zother/MySensors/MySensor/#build-the-gateway","title":"Build the Gateway","text":"<p>Go to : https://opendomotech.com/mysensors-gateway-wifi-jeedom-domoticz/</p> <p></p>"},{"location":"Home-Assistant/Zother/MySensors/MySensor/#add-to-the-arduino-ide-mysensor","title":"Add to the Arduino IDE MySensor","text":"<p>The CH240 driver for generic Arduino Nano is also installed in OS X Catalina</p> <p></p> <p></p>"},{"location":"Home-Assistant/Zother/MySensors/MySensor/#first-sketch","title":"First sketch","text":"<p>Go to /Files/Examples/MySensors/GatewaySerial</p> <p> </p> <p>Get arduino code (see end of page)</p> <p>Carrefull :  - baud: 115200</p> <p></p>"},{"location":"Home-Assistant/Zother/MySensors/MySensor/#add-dht22-sensor","title":"Add DHT22 sensor","text":""},{"location":"Home-Assistant/Zother/MySensors/MySensor/#temparature-and-humidity-dht22","title":"Temparature and Humidity DHT22","text":"<p>https://www.mysensors.org/build/humidity</p> <p>DHT Lib is here ../DHT22/Lib-Code</p> <p>Example is https://github.com/mysensors/MySensorsArduinoExamples/blob/master/examples/DhtTemperatureAndHumiditySensor/DhtTemperatureAndHumiditySensor.ino</p> <p>Intrepretation of logs : https://www.mysensors.org/build/parser</p>"},{"location":"Home-Assistant/Zother/MySensors/MySensor/#add-mysensor-to-home-assistant","title":"Add Mysensor to Home Assistant","text":"<p>Example (Capteur de luminosit\u00e9): https://opendomotech.com/creer-capteurs-mysensors-exemples-de-multi-sensors/</p> <p>Aller sur : https://www.home-assistant.io/integrations/mysensors/</p> <p></p> <p></p> <p></p> <p>You must find a new integration</p> <p></p> <pre><code>/**\n* The MySensors Arduino library handles the wireless radio link and protocol\n* between your home built sensors/actuators and HA controller of choice.\n* The sensors forms a self healing radio network with optional repeaters. Each\n* repeater and gateway builds a routing tables in EEPROM which keeps track of the\n* network topology allowing messages to be routed to nodes.\n*\n* Created by Henrik Ekblad &lt;henrik.ekblad@mysensors.org&gt;\n* Copyright (C) 2013-2019 Sensnology AB\n* Full contributor list: https://github.com/mysensors/MySensors/graphs/contributors\n*\n* Documentation: http://www.mysensors.org\n* Support Forum: http://forum.mysensors.org\n*\n* This program is free software; you can redistribute it and/or\n* modify it under the terms of the GNU General Public License\n* version 2 as published by the Free Software Foundation.\n*\n*******************************\n*\n* DESCRIPTION\n* The ArduinoGateway prints data received from sensors on the serial link.\n* The gateway accepts input on serial which will be sent out on radio network.\n*\n* The GW code is designed for Arduino Nano 328p / 16MHz\n*\n* Wire connections (OPTIONAL):\n* - Inclusion button should be connected between digital pin 3 and GND\n* - RX/TX/ERR leds need to be connected between +5V (anode) and digital pin 6/5/4 with resistor 270-330R in a series\n*\n* LEDs (OPTIONAL):\n* - To use the feature, uncomment any of the MY_DEFAULT_xx_LED_PINs\n* - RX (green) - blink fast on radio message received. In inclusion mode will blink fast only on presentation received\n* - TX (yellow) - blink fast on radio message transmitted. In inclusion mode will blink slowly\n* - ERR (red) - fast blink on error during transmission error or receive crc error\n*\n*/\n\n// Enable debug prints to serial monitor\n#define MY_DEBUG\n\n\n// Enable and select radio type attached\n#define MY_RADIO_RF24\n//#define MY_RADIO_NRF5_ESB\n//#define MY_RADIO_RFM69\n//#define MY_RADIO_RFM95\n\n// Set LOW transmit power level as default, if you have an amplified NRF-module and\n// power your radio separately with a good regulator you can turn up PA level.\n#define MY_RF24_PA_LEVEL RF24_PA_LOW\n\n// Enable serial gateway\n#define MY_GATEWAY_SERIAL\n\n// Define a lower baud rate for Arduinos running on 8 MHz (Arduino Pro Mini 3.3V &amp; SenseBender)\n#if F_CPU == 8000000L\n#define MY_BAUD_RATE 38400\n#endif\n\n// Enable inclusion mode\n#define MY_INCLUSION_MODE_FEATURE\n// Enable Inclusion mode button on gateway\n//#define MY_INCLUSION_BUTTON_FEATURE\n\n// Inverses behavior of inclusion button (if using external pullup)\n//#define MY_INCLUSION_BUTTON_EXTERNAL_PULLUP\n\n// Set inclusion mode duration (in seconds)\n#define MY_INCLUSION_MODE_DURATION 60\n// Digital pin used for inclusion mode button\n//#define MY_INCLUSION_MODE_BUTTON_PIN  3\n\n// Set blinking period\n#define MY_DEFAULT_LED_BLINK_PERIOD 300\n\n// Inverses the behavior of leds\n//#define MY_WITH_LEDS_BLINKING_INVERSE\n\n// Flash leds on rx/tx/err\n// Uncomment to override default HW configurations\n//#define MY_DEFAULT_ERR_LED_PIN 4  // Error led pin\n//#define MY_DEFAULT_RX_LED_PIN  6  // Receive led pin\n//#define MY_DEFAULT_TX_LED_PIN  5  // the PCB, on board LED\n\n#include &lt;MySensors.h&gt;\n\nvoid setup()\n{\n    // Setup locally attached sensors\n}\n\nvoid presentation()\n{\n    // Present locally attached sensors\n}\n\nvoid loop()\n{\n    // Send locally attached sensor data here\n}\n</code></pre>"},{"location":"Home-Assistant/Zother/USB_cable/USB_cable/","title":"USB cable construction","text":"<p>Solder the wire to the USB plug</p> <p></p> <p>Mark the corresponding strand at the other end of  the thread also in red. You can tell by the text  written on one of the two strands. You can also use an ohmmeter.</p> <p></p> <p>Put super glue and plug the cover</p> <p></p> <p>Solder the other end of the wire</p> <p></p>"}]}